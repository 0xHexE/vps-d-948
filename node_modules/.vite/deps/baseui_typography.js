import {
  __commonJS,
  __toESM,
  require_react
} from "./chunk-ATHKL65H.js";

// .yarn/cache/react-is-npm-16.13.1-a9b9382b4f-f7a19ac349.zip/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  ".yarn/cache/react-is-npm-16.13.1-a9b9382b4f-f7a19ac349.zip/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType2(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType2;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// .yarn/cache/react-is-npm-16.13.1-a9b9382b4f-f7a19ac349.zip/node_modules/react-is/index.js
var require_react_is = __commonJS({
  ".yarn/cache/react-is-npm-16.13.1-a9b9382b4f-f7a19ac349.zip/node_modules/react-is/index.js"(exports, module2) {
    "use strict";
    if (false) {
      module2.exports = null;
    } else {
      module2.exports = require_react_is_development();
    }
  }
});

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/typography/index.js
var React6 = __toESM(require_react());

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/block/block.js
var React5 = __toESM(require_react());

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/helpers/responsive-helpers.js
var getMediaQuery = function getMediaQuery2(breakpoint) {
  return "@media screen and (min-width: ".concat(breakpoint, "px)");
};
var getMediaQueries = function getMediaQueries2(breakpoints2) {
  return Object.keys(breakpoints2).map(function(key) {
    return breakpoints2[key];
  }).sort(function(a, b) {
    return a - b;
  }).map(getMediaQuery);
};

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/styles/theme-provider.js
var React = __toESM(require_react());

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/tokens/colors.js
var colors = {
  white: "#FFFFFF",
  gray50: "#F6F6F6",
  gray100: "#EEEEEE",
  gray200: "#E2E2E2",
  gray300: "#CBCBCB",
  gray400: "#AFAFAF",
  gray500: "#6B6B6B",
  gray600: "#545454",
  gray700: "#333333",
  gray800: "#1F1F1F",
  gray900: "#141414",
  black: "#000000",
  platinum50: "#F4FAFB",
  platinum100: "#EBF5F7",
  platinum200: "#CCDFE5",
  platinum300: "#A1BDCA",
  platinum400: "#8EA3AD",
  platinum500: "#6C7C83",
  platinum600: "#556268",
  platinum700: "#394145",
  platinum800: "#142328",
  red50: "#FFEFED",
  red100: "#FED7D2",
  red200: "#F1998E",
  red300: "#E85C4A",
  red400: "#E11900",
  red500: "#AB1300",
  red600: "#870F00",
  red700: "#5A0A00",
  orange50: "#FFF3EF",
  orange100: "#FFE1D6",
  orange200: "#FABDA5",
  orange300: "#FA9269",
  orange400: "#FF6937",
  orange500: "#C14F29",
  orange600: "#9A3F21",
  orange700: "#672A16",
  yellow50: "#FFFAF0",
  yellow100: "#FFF2D9",
  yellow200: "#FFE3AC",
  yellow300: "#FFCF70",
  yellow400: "#FFC043",
  yellow500: "#BC8B2C",
  yellow600: "#996F00",
  yellow700: "#674D1B",
  lime50: "#F2F7ED",
  lime100: "#E0ECD2",
  lime200: "#BCD69D",
  lime300: "#8BB956",
  lime400: "#67A421",
  lime500: "#4E7C19",
  lime600: "#3D6213",
  lime700: "#29410d",
  green50: "#E6F2ED",
  green100: "#ADDEC9",
  green200: "#66D19E",
  green300: "#06C167",
  green400: "#048848",
  green500: "#03703C",
  green600: "#03582F",
  green700: "#10462D",
  teal50: "#EDF5F7",
  teal100: "#D2E8EC",
  teal200: "#9DCDD6",
  teal300: "#56A9B9",
  teal400: "#218EA4",
  teal500: "#196B7C",
  teal600: "#135562",
  teal700: "#0D3841",
  blue50: "#EFF3FE",
  blue100: "#D4E2FC",
  blue200: "#A0BFF8",
  blue300: "#5B91F5",
  blue400: "#276EF1",
  blue500: "#1E54B7",
  blue600: "#174291",
  blue700: "#102C60",
  cobalt50: "#EBEDFA",
  cobalt100: "#D2D7F0",
  cobalt200: "#949CE3",
  cobalt300: "#535FCF",
  cobalt400: "#0E1FC1",
  cobalt500: "#0A1899",
  cobalt600: "#081270",
  cobalt700: "#050C4D",
  purple50: "#F3F1F9",
  purple100: "#E3DDF2",
  purple200: "#C1B4E2",
  purple300: "#957FCE",
  purple400: "#7356BF",
  purple500: "#574191",
  purple600: "#453473",
  purple700: "#2E224C",
  magenta50: "#F9F1F7",
  magenta100: "#F2DDEB",
  magenta200: "#E2B4D3",
  magenta300: "#CE7EB3",
  magenta400: "#BF569C",
  magenta500: "#914176",
  magenta600: "#72335D",
  magenta700: "#4C223E",
  brown50: "#F6F0EA",
  brown100: "#EBE0DB",
  brown200: "#D2BBB0",
  brown300: "#B18977",
  brown400: "#99644C",
  brown500: "#744C3A",
  brown600: "#5C3C2E",
  brown700: "#3D281E"
};
var colors_default = colors;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/light-theme/color-tokens.js
var lightColorTokens = {
  // Primary Palette
  primaryA: colors_default.black,
  primaryB: colors_default.white,
  primary: colors_default.black,
  primary50: colors_default.gray50,
  primary100: colors_default.gray100,
  primary200: colors_default.gray200,
  primary300: colors_default.gray300,
  primary400: colors_default.gray400,
  primary500: colors_default.gray500,
  primary600: colors_default.gray600,
  primary700: colors_default.gray700,
  // Accent Palette
  accent: colors_default.blue400,
  accent50: colors_default.blue50,
  accent100: colors_default.blue100,
  accent200: colors_default.blue200,
  accent300: colors_default.blue300,
  accent400: colors_default.blue400,
  accent500: colors_default.blue500,
  accent600: colors_default.blue600,
  accent700: colors_default.blue700,
  // Negative Palette
  negative: colors_default.red400,
  negative50: colors_default.red50,
  negative100: colors_default.red100,
  negative200: colors_default.red200,
  negative300: colors_default.red300,
  negative400: colors_default.red400,
  negative500: colors_default.red500,
  negative600: colors_default.red600,
  negative700: colors_default.red700,
  // Warning Palette
  warning: colors_default.yellow400,
  warning50: colors_default.yellow50,
  warning100: colors_default.yellow100,
  warning200: colors_default.yellow200,
  warning300: colors_default.yellow300,
  warning400: colors_default.yellow400,
  warning500: colors_default.yellow500,
  warning600: colors_default.yellow600,
  warning700: colors_default.yellow700,
  // Positive Palette
  positive: colors_default.green500,
  positive50: colors_default.green50,
  positive100: colors_default.green100,
  positive200: colors_default.green200,
  positive300: colors_default.green300,
  positive400: colors_default.green400,
  positive500: colors_default.green500,
  positive600: colors_default.green600,
  positive700: colors_default.green700,
  // Monochrome Palette
  white: colors_default.white,
  black: colors_default.black,
  mono100: colors_default.white,
  mono200: colors_default.gray50,
  mono300: colors_default.gray100,
  mono400: colors_default.gray200,
  mono500: colors_default.gray300,
  mono600: colors_default.gray400,
  mono700: colors_default.gray500,
  mono800: colors_default.gray600,
  mono900: colors_default.gray700,
  mono1000: colors_default.black,
  // Rating Palette,
  ratingInactiveFill: colors_default.gray100,
  ratingStroke: colors_default.gray300
};
var color_tokens_default = lightColorTokens;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/styles/util.js
function hexToRgb() {
  var hex = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  var alpha = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "1";
  var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
  hex = hex.replace(shorthandRegex, function(m, r, g, b) {
    return r + r + g + g + b + b;
  });
  var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
  return result ? "rgba(".concat(parseInt(result[1], 16), ", ").concat(parseInt(result[2], 16), ", ").concat(parseInt(result[3], 16), ", ").concat(alpha, ")") : null;
}

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/light-theme/color-semantic-tokens.js
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var color_semantic_tokens_default = function() {
  var foundation = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : color_tokens_default;
  var core = {
    // Background
    backgroundPrimary: foundation.primaryB,
    backgroundSecondary: colors_default.gray50,
    backgroundTertiary: colors_default.gray100,
    backgroundInversePrimary: foundation.primaryA,
    backgroundInverseSecondary: colors_default.gray800,
    // Content
    contentPrimary: foundation.primaryA,
    contentSecondary: colors_default.gray600,
    contentTertiary: colors_default.gray500,
    contentInversePrimary: foundation.primaryB,
    contentInverseSecondary: colors_default.gray300,
    contentInverseTertiary: colors_default.gray400,
    // Border
    borderOpaque: colors_default.gray200,
    // @ts-ignore
    borderTransparent: hexToRgb(foundation.primaryA, "0.08"),
    borderSelected: foundation.primaryA,
    borderInverseOpaque: colors_default.gray700,
    // @ts-ignore
    borderInverseTransparent: hexToRgb(foundation.primaryB, "0.2"),
    borderInverseSelected: foundation.primaryB
  };
  var coreExtensions = {
    // Backgrounds
    backgroundStateDisabled: colors_default.gray50,
    // @ts-ignore
    backgroundOverlayDark: hexToRgb(colors_default.black, "0.3"),
    // @ts-ignore
    backgroundOverlayLight: hexToRgb(colors_default.black, "0.08"),
    // @ts-ignore
    backgroundOverlayArt: hexToRgb(colors_default.black, "0.00"),
    backgroundAccent: foundation.accent,
    backgroundNegative: foundation.negative,
    backgroundWarning: foundation.warning,
    backgroundPositive: colors_default.green400,
    backgroundAccentLight: colors_default.blue50,
    backgroundNegativeLight: colors_default.red50,
    backgroundWarningLight: colors_default.yellow50,
    backgroundPositiveLight: colors_default.green50,
    backgroundAlwaysDark: colors_default.black,
    backgroundAlwaysLight: colors_default.white,
    // Content
    contentStateDisabled: colors_default.gray400,
    contentAccent: foundation.accent,
    contentOnColor: colors_default.white,
    contentOnColorInverse: colors_default.black,
    contentNegative: foundation.negative,
    contentWarning: colors_default.yellow600,
    contentPositive: colors_default.green400,
    // Border
    borderStateDisabled: colors_default.gray50,
    borderAccent: colors_default.blue400,
    borderAccentLight: colors_default.blue200,
    borderNegative: colors_default.red200,
    borderWarning: colors_default.yellow200,
    borderPositive: colors_default.green200,
    borderNegativeLight: colors_default.red200,
    borderWarningLight: colors_default.yellow200,
    borderPositiveLight: colors_default.green200,
    // Programs
    safety: colors_default.blue400,
    eatsGreen400: colors_default.green400,
    freightBlue400: colors_default.cobalt400,
    jumpRed400: colors_default.red400,
    rewardsTier1: colors_default.blue400,
    rewardsTier2: colors_default.yellow400,
    rewardsTier3: colors_default.platinum400,
    rewardsTier4: colors_default.black,
    membership: colors_default.yellow600
  };
  return _objectSpread(_objectSpread({}, core), coreExtensions);
};

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/light-theme/color-component-tokens.js
var tagHoverBackground = "rgba(0, 0, 0, 0.08)";
var color_component_tokens_default = function() {
  var themePrimitives = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : color_tokens_default;
  return {
    bannerActionLowInfo: themePrimitives.accent100,
    bannerActionLowNegative: themePrimitives.negative100,
    bannerActionLowPositive: themePrimitives.positive100,
    bannerActionLowWarning: themePrimitives.warning200,
    bannerActionHighInfo: themePrimitives.accent500,
    bannerActionHighNegative: themePrimitives.negative500,
    bannerActionHighPositive: themePrimitives.positive500,
    bannerActionHighWarning: themePrimitives.warning200,
    // Buttons
    buttonPrimaryFill: themePrimitives.primary,
    buttonPrimaryText: themePrimitives.white,
    buttonPrimaryHover: themePrimitives.primary700,
    buttonPrimaryActive: themePrimitives.primary600,
    buttonPrimarySelectedFill: themePrimitives.primary600,
    buttonPrimarySelectedText: themePrimitives.white,
    buttonPrimarySpinnerForeground: themePrimitives.accent,
    buttonPrimarySpinnerBackground: themePrimitives.primaryB,
    buttonSecondaryFill: themePrimitives.primary100,
    buttonSecondaryText: themePrimitives.primary,
    buttonSecondaryHover: themePrimitives.primary200,
    buttonSecondaryActive: themePrimitives.primary300,
    buttonSecondarySelectedFill: themePrimitives.primary300,
    buttonSecondarySelectedText: themePrimitives.primary,
    buttonSecondarySpinnerForeground: themePrimitives.accent,
    buttonSecondarySpinnerBackground: themePrimitives.primaryB,
    buttonTertiaryFill: "transparent",
    buttonTertiaryText: themePrimitives.primary,
    buttonTertiaryHover: themePrimitives.primary50,
    buttonTertiaryActive: themePrimitives.primary100,
    buttonTertiarySelectedFill: themePrimitives.primary100,
    buttonTertiarySelectedText: themePrimitives.primary,
    buttonTertiaryDisabledActiveFill: themePrimitives.primary50,
    buttonTertiaryDisabledActiveText: themePrimitives.mono600,
    buttonTertiarySpinnerForeground: themePrimitives.accent,
    buttonTertiarySpinnerBackground: themePrimitives.primary100,
    buttonDisabledFill: themePrimitives.mono200,
    buttonDisabledText: themePrimitives.mono600,
    buttonDisabledActiveFill: themePrimitives.mono700,
    buttonDisabledActiveText: themePrimitives.mono100,
    buttonDisabledSpinnerForeground: themePrimitives.mono600,
    buttonDisabledSpinnerBackground: themePrimitives.mono400,
    // Breadcrumbs
    breadcrumbsText: themePrimitives.black,
    breadcrumbsSeparatorFill: themePrimitives.mono700,
    // Datepicker
    calendarBackground: themePrimitives.mono100,
    calendarForeground: themePrimitives.mono1000,
    calendarForegroundDisabled: themePrimitives.mono500,
    calendarHeaderBackground: themePrimitives.white,
    calendarHeaderForeground: themePrimitives.primary,
    calendarHeaderBackgroundActive: themePrimitives.primary700,
    calendarHeaderForegroundDisabled: themePrimitives.primary500,
    calendarDayForegroundPseudoSelected: themePrimitives.mono1000,
    calendarDayBackgroundPseudoSelectedHighlighted: themePrimitives.primary200,
    calendarDayForegroundPseudoSelectedHighlighted: themePrimitives.mono1000,
    calendarDayBackgroundSelected: themePrimitives.primary,
    calendarDayForegroundSelected: themePrimitives.white,
    calendarDayBackgroundSelectedHighlighted: themePrimitives.primary,
    calendarDayForegroundSelectedHighlighted: themePrimitives.white,
    // Combobox
    comboboxListItemFocus: themePrimitives.mono200,
    comboboxListItemHover: themePrimitives.mono300,
    // FileUploader
    fileUploaderBackgroundColor: themePrimitives.mono200,
    fileUploaderBackgroundColorActive: themePrimitives.primary50,
    fileUploaderBorderColorActive: themePrimitives.primary,
    fileUploaderBorderColorDefault: themePrimitives.mono500,
    fileUploaderMessageColor: themePrimitives.mono800,
    // Links
    linkText: themePrimitives.primary,
    linkVisited: themePrimitives.primary700,
    linkHover: themePrimitives.primary600,
    linkActive: themePrimitives.primary500,
    // List
    listHeaderFill: themePrimitives.white,
    listBodyFill: themePrimitives.white,
    // ProgressSteps
    progressStepsCompletedText: themePrimitives.white,
    progressStepsCompletedFill: themePrimitives.primary,
    progressStepsActiveText: themePrimitives.white,
    progressStepsActiveFill: themePrimitives.primary,
    // Toggle
    toggleFill: themePrimitives.white,
    toggleFillChecked: themePrimitives.primary,
    toggleFillDisabled: themePrimitives.mono600,
    toggleTrackFill: themePrimitives.mono400,
    toggleTrackFillDisabled: themePrimitives.mono300,
    // Tick
    tickFill: themePrimitives.mono100,
    tickFillHover: themePrimitives.mono200,
    tickFillActive: themePrimitives.mono300,
    tickFillSelected: themePrimitives.primary,
    tickFillSelectedHover: themePrimitives.primary700,
    tickFillSelectedHoverActive: themePrimitives.primary600,
    tickFillError: themePrimitives.negative50,
    tickFillErrorHover: themePrimitives.negative100,
    tickFillErrorHoverActive: themePrimitives.negative200,
    tickFillErrorSelected: themePrimitives.negative400,
    tickFillErrorSelectedHover: themePrimitives.negative500,
    tickFillErrorSelectedHoverActive: themePrimitives.negative600,
    tickFillDisabled: themePrimitives.mono600,
    tickBorder: themePrimitives.mono700,
    tickBorderError: themePrimitives.negative400,
    tickMarkFill: themePrimitives.white,
    tickMarkFillError: themePrimitives.white,
    tickMarkFillDisabled: themePrimitives.mono100,
    // Slider/Toggle
    sliderTrackFill: "transparent",
    sliderHandleFill: themePrimitives.primaryA,
    sliderHandleFillDisabled: themePrimitives.primary400,
    sliderHandleInnerFill: themePrimitives.primaryA,
    sliderTrackFillHover: themePrimitives.mono500,
    sliderTrackFillActive: themePrimitives.mono600,
    sliderTrackFillDisabled: themePrimitives.mono300,
    sliderHandleInnerFillDisabled: themePrimitives.mono400,
    sliderHandleInnerFillSelectedHover: themePrimitives.primary,
    sliderHandleInnerFillSelectedActive: themePrimitives.primary500,
    // Inputs
    inputBorder: themePrimitives.mono300,
    inputFill: themePrimitives.mono300,
    inputFillError: themePrimitives.negative50,
    inputFillDisabled: themePrimitives.mono200,
    inputFillActive: themePrimitives.mono200,
    inputFillPositive: themePrimitives.positive50,
    inputTextDisabled: themePrimitives.mono600,
    inputBorderError: themePrimitives.negative200,
    inputBorderPositive: themePrimitives.positive200,
    inputEnhancerFill: themePrimitives.mono300,
    inputEnhancerFillDisabled: themePrimitives.mono300,
    inputEnhancerTextDisabled: themePrimitives.mono600,
    inputPlaceholder: themePrimitives.mono700,
    inputPlaceholderDisabled: themePrimitives.mono600,
    // Menu
    menuFill: themePrimitives.mono100,
    menuFillHover: themePrimitives.mono200,
    menuFontDefault: themePrimitives.mono800,
    menuFontDisabled: themePrimitives.mono500,
    menuFontHighlighted: themePrimitives.mono1000,
    menuFontSelected: themePrimitives.mono1000,
    // Modal
    modalCloseColor: themePrimitives.mono1000,
    modalCloseColorHover: themePrimitives.mono800,
    modalCloseColorFocus: themePrimitives.mono800,
    // Tab
    tabBarFill: themePrimitives.mono200,
    tabColor: themePrimitives.mono800,
    // Notification
    notificationInfoBackground: themePrimitives.accent50,
    notificationInfoText: themePrimitives.primaryA,
    notificationPositiveBackground: themePrimitives.positive50,
    notificationPositiveText: themePrimitives.primaryA,
    notificationWarningBackground: themePrimitives.warning50,
    notificationWarningText: themePrimitives.primaryA,
    notificationNegativeBackground: themePrimitives.negative50,
    notificationNegativeText: themePrimitives.primaryA,
    // Tag
    // Custom ramps
    tagFontDisabledRampUnit: "100",
    tagSolidFontRampUnit: "0",
    tagSolidRampUnit: "400",
    tagOutlinedFontRampUnit: "400",
    tagOutlinedRampUnit: "200",
    // Deprecated
    tagSolidHoverRampUnit: "50",
    tagSolidActiveRampUnit: "100",
    tagSolidDisabledRampUnit: "50",
    tagSolidFontHoverRampUnit: "500",
    tagLightRampUnit: "50",
    tagLightHoverRampUnit: "100",
    tagLightActiveRampUnit: "100",
    tagLightFontRampUnit: "500",
    tagLightFontHoverRampUnit: "500",
    tagOutlinedHoverRampUnit: "50",
    tagOutlinedActiveRampUnit: "0",
    tagOutlinedFontHoverRampUnit: "400",
    // Neutral
    tagNeutralFontDisabled: themePrimitives.mono600,
    tagNeutralOutlinedDisabled: themePrimitives.mono400,
    tagNeutralSolidFont: themePrimitives.white,
    tagNeutralSolidBackground: themePrimitives.black,
    tagNeutralOutlinedBackground: themePrimitives.mono600,
    tagNeutralOutlinedFont: themePrimitives.black,
    // Deprecated
    tagNeutralSolidHover: themePrimitives.mono300,
    tagNeutralSolidActive: themePrimitives.mono400,
    tagNeutralSolidDisabled: themePrimitives.mono200,
    tagNeutralSolidFontHover: themePrimitives.mono900,
    tagNeutralLightBackground: themePrimitives.mono300,
    tagNeutralLightHover: themePrimitives.mono300,
    tagNeutralLightActive: themePrimitives.mono400,
    tagNeutralLightDisabled: themePrimitives.mono200,
    tagNeutralLightFont: themePrimitives.mono900,
    tagNeutralLightFontHover: themePrimitives.mono900,
    tagNeutralOutlinedActive: themePrimitives.mono900,
    tagNeutralOutlinedFontHover: themePrimitives.mono800,
    tagNeutralOutlinedHover: tagHoverBackground,
    // Primary
    tagPrimaryFontDisabled: themePrimitives.primary400,
    tagPrimaryOutlinedDisabled: themePrimitives.primary200,
    tagPrimarySolidFont: themePrimitives.white,
    tagPrimarySolidBackground: themePrimitives.primary,
    tagPrimaryOutlinedFontHover: themePrimitives.primary,
    tagPrimaryOutlinedFont: themePrimitives.primary,
    // Deprecated
    tagPrimarySolidHover: themePrimitives.primary100,
    tagPrimarySolidActive: themePrimitives.primary200,
    tagPrimarySolidDisabled: themePrimitives.primary50,
    tagPrimarySolidFontHover: themePrimitives.primary700,
    tagPrimaryLightBackground: themePrimitives.primary50,
    tagPrimaryLightHover: themePrimitives.primary100,
    tagPrimaryLightActive: themePrimitives.primary100,
    tagPrimaryLightDisabled: themePrimitives.primary50,
    tagPrimaryLightFont: themePrimitives.primary500,
    tagPrimaryLightFontHover: themePrimitives.primary500,
    tagPrimaryOutlinedActive: themePrimitives.primary600,
    tagPrimaryOutlinedHover: tagHoverBackground,
    tagPrimaryOutlinedBackground: themePrimitives.primary400,
    // Accent
    tagAccentFontDisabled: themePrimitives.accent200,
    tagAccentOutlinedDisabled: themePrimitives.accent200,
    tagAccentSolidFont: themePrimitives.white,
    tagAccentSolidBackground: themePrimitives.accent400,
    tagAccentOutlinedBackground: themePrimitives.accent200,
    tagAccentOutlinedFont: themePrimitives.accent400,
    // Deprecated
    tagAccentSolidHover: themePrimitives.accent50,
    tagAccentSolidActive: themePrimitives.accent100,
    tagAccentSolidDisabled: themePrimitives.accent50,
    tagAccentSolidFontHover: themePrimitives.accent500,
    tagAccentLightBackground: themePrimitives.accent50,
    tagAccentLightHover: themePrimitives.accent100,
    tagAccentLightActive: themePrimitives.accent100,
    tagAccentLightDisabled: themePrimitives.accent50,
    tagAccentLightFont: themePrimitives.accent500,
    tagAccentLightFontHover: themePrimitives.accent500,
    tagAccentOutlinedActive: themePrimitives.accent600,
    tagAccentOutlinedFontHover: themePrimitives.accent400,
    tagAccentOutlinedHover: tagHoverBackground,
    // Positive
    tagPositiveFontDisabled: themePrimitives.positive200,
    tagPositiveOutlinedDisabled: themePrimitives.positive200,
    tagPositiveSolidFont: themePrimitives.white,
    tagPositiveSolidBackground: themePrimitives.positive400,
    tagPositiveOutlinedBackground: themePrimitives.positive200,
    tagPositiveOutlinedFont: themePrimitives.positive400,
    // Deprecated
    tagPositiveSolidHover: themePrimitives.positive50,
    tagPositiveSolidActive: themePrimitives.positive100,
    tagPositiveSolidDisabled: themePrimitives.positive50,
    tagPositiveSolidFontHover: themePrimitives.positive500,
    tagPositiveLightBackground: themePrimitives.positive50,
    tagPositiveLightHover: themePrimitives.positive100,
    tagPositiveLightActive: themePrimitives.positive100,
    tagPositiveLightDisabled: themePrimitives.positive50,
    tagPositiveLightFont: themePrimitives.positive500,
    tagPositiveLightFontHover: themePrimitives.positive500,
    tagPositiveOutlinedActive: themePrimitives.positive600,
    tagPositiveOutlinedFontHover: themePrimitives.positive400,
    tagPositiveOutlinedHover: tagHoverBackground,
    // Warning
    tagWarningFontDisabled: themePrimitives.warning300,
    tagWarningOutlinedDisabled: themePrimitives.warning300,
    tagWarningSolidFont: themePrimitives.warning700,
    tagWarningSolidBackground: themePrimitives.warning400,
    tagWarningOutlinedBackground: themePrimitives.warning300,
    tagWarningOutlinedFont: themePrimitives.warning600,
    // Deprecated
    tagWarningSolidHover: themePrimitives.warning50,
    tagWarningSolidActive: themePrimitives.warning100,
    tagWarningSolidDisabled: themePrimitives.warning50,
    tagWarningSolidFontHover: themePrimitives.warning500,
    tagWarningLightBackground: themePrimitives.warning50,
    tagWarningLightHover: themePrimitives.warning100,
    tagWarningLightActive: themePrimitives.warning100,
    tagWarningLightDisabled: themePrimitives.warning50,
    tagWarningLightFont: themePrimitives.warning500,
    tagWarningLightFontHover: themePrimitives.warning500,
    tagWarningOutlinedActive: themePrimitives.warning600,
    tagWarningOutlinedFontHover: themePrimitives.warning600,
    tagWarningOutlinedHover: tagHoverBackground,
    // Negative
    tagNegativeFontDisabled: themePrimitives.negative200,
    tagNegativeOutlinedDisabled: themePrimitives.negative200,
    tagNegativeSolidFont: themePrimitives.white,
    tagNegativeSolidBackground: themePrimitives.negative400,
    tagNegativeOutlinedBackground: themePrimitives.negative200,
    tagNegativeOutlinedFont: themePrimitives.negative400,
    // Deprecated
    tagNegativeSolidHover: themePrimitives.negative50,
    tagNegativeSolidActive: themePrimitives.negative100,
    tagNegativeSolidDisabled: themePrimitives.negative50,
    tagNegativeSolidFontHover: themePrimitives.negative500,
    tagNegativeLightBackground: themePrimitives.negative50,
    tagNegativeLightHover: themePrimitives.negative100,
    tagNegativeLightActive: themePrimitives.negative100,
    tagNegativeLightDisabled: themePrimitives.negative50,
    tagNegativeLightFont: themePrimitives.negative500,
    tagNegativeLightFontHover: themePrimitives.negative500,
    tagNegativeOutlinedActive: themePrimitives.negative600,
    tagNegativeOutlinedFontHover: themePrimitives.negative400,
    tagNegativeOutlinedHover: tagHoverBackground,
    // Table
    tableHeadBackgroundColor: themePrimitives.mono100,
    tableBackground: themePrimitives.mono100,
    tableStripedBackground: themePrimitives.mono200,
    tableFilter: themePrimitives.mono600,
    tableFilterHeading: themePrimitives.mono700,
    tableFilterBackground: themePrimitives.mono100,
    tableFilterFooterBackground: themePrimitives.mono200,
    // Toast
    toastText: themePrimitives.white,
    toastPrimaryText: themePrimitives.white,
    toastInfoBackground: themePrimitives.accent400,
    toastInfoText: themePrimitives.white,
    toastPositiveBackground: themePrimitives.positive400,
    toastPositiveText: themePrimitives.white,
    toastWarningBackground: themePrimitives.warning400,
    toastWarningText: themePrimitives.black,
    toastNegativeBackground: themePrimitives.negative400,
    toastNegativeText: themePrimitives.white,
    // Spinner
    spinnerTrackFill: themePrimitives.mono900,
    // Progress bar
    progressbarTrackFill: themePrimitives.mono900,
    // Tooltip
    tooltipBackground: themePrimitives.mono900,
    tooltipText: themePrimitives.mono100
  };
};

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/shared/borders.js
var borders = {
  border100: {
    borderColor: "hsla(0, 0%, 0%, 0.04)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  border200: {
    borderColor: "hsla(0, 0%, 0%, 0.08)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  border300: {
    borderColor: "hsla(0, 0%, 0%, 0.12)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  border400: {
    borderColor: "hsla(0, 0%, 0%, 0.16)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  border500: {
    borderColor: "hsla(0, 0%, 0%, 0.2)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  border600: {
    borderColor: "hsla(0, 0%, 0%, 0.24)",
    borderStyle: "solid",
    borderWidth: "1px"
  },
  radius100: "2px",
  radius200: "4px",
  radius300: "8px",
  radius400: "12px",
  radius500: "16px",
  /** Datepicker (Range), Progress Bar, Slider, Tag */
  useRoundedCorners: true,
  /** Button, ButtonGroup */
  buttonBorderRadiusMini: "4px",
  buttonBorderRadius: "8px",
  /** Checkbox */
  checkboxBorderRadius: "0px",
  /** Input, Select, Textarea */
  inputBorderRadiusMini: "4px",
  inputBorderRadius: "8px",
  /** Popover, Menu, Tooltip */
  popoverBorderRadius: "8px",
  /** Card, Datepicker, Modal, Toast, Notification */
  surfaceBorderRadius: "0px",
  /** Tag */
  tagBorderRadius: "24px"
};
var borders_default = borders;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/shared/lighting.js
var lighting = {
  shadow400: "0 1px 4px hsla(0, 0%, 0%, 0.16)",
  shadow500: "0 2px 8px hsla(0, 0%, 0%, 0.16)",
  shadow600: "0 4px 16px hsla(0, 0%, 0%, 0.16)",
  shadow700: "0 8px 24px hsla(0, 0%, 0%, 0.16)",
  overlay0: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0)",
  overlay100: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.04)",
  overlay200: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.08)",
  overlay300: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.12)",
  overlay400: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.16)",
  overlay500: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.2)",
  overlay600: "inset 0 0 0 1000px hsla(0, 0%, 0%, 0.24)",
  shallowAbove: "0px -4px 16px rgba(0, 0, 0, 0.12)",
  shallowBelow: "0px 4px 16px rgba(0, 0, 0, 0.12)",
  deepAbove: "0px -16px 48px rgba(0, 0, 0, 0.22)",
  deepBelow: "0px 16px 48px rgba(0, 0, 0, 0.22)"
};
var lighting_default = lighting;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/shared/typography.js
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var defaultFontTokens = {
  primaryFontFamily: 'system-ui, "Helvetica Neue", Helvetica, Arial, sans-serif'
};
var monoFontFamily = '"Lucida Console", Monaco, monospace';
var typography_default = function() {
  var fontTokens2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : defaultFontTokens;
  var font100 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "12px",
    fontWeight: "normal",
    lineHeight: "20px"
  };
  var font150 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "12px",
    fontWeight: 500,
    lineHeight: "16px"
  };
  var font200 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "14px",
    fontWeight: "normal",
    lineHeight: "20px"
  };
  var font250 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "14px",
    fontWeight: 500,
    lineHeight: "16px"
  };
  var font300 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "16px",
    fontWeight: "normal",
    lineHeight: "24px"
  };
  var font350 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "16px",
    fontWeight: 500,
    lineHeight: "20px"
  };
  var font400 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "18px",
    fontWeight: "normal",
    lineHeight: "28px"
  };
  var font450 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "18px",
    fontWeight: 500,
    lineHeight: "24px"
  };
  var font550 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "20px",
    fontWeight: 700,
    lineHeight: "28px"
  };
  var font650 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "24px",
    fontWeight: 700,
    lineHeight: "32px"
  };
  var font750 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "28px",
    fontWeight: 700,
    lineHeight: "36px"
  };
  var font850 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "32px",
    fontWeight: 700,
    lineHeight: "40px"
  };
  var font950 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "36px",
    fontWeight: 700,
    lineHeight: "44px"
  };
  var font1050 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "40px",
    fontWeight: 700,
    lineHeight: "52px"
  };
  var font1150 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "36px",
    fontWeight: 700,
    lineHeight: "44px"
  };
  var font1250 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "44px",
    fontWeight: 700,
    lineHeight: "52px"
  };
  var font1350 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "52px",
    fontWeight: 700,
    lineHeight: "64px"
  };
  var font1450 = {
    fontFamily: fontTokens2.primaryFontFamily,
    fontSize: "96px",
    fontWeight: 700,
    lineHeight: "112px"
  };
  return {
    font100,
    font150,
    font200,
    font250,
    font300,
    font350,
    font400,
    font450,
    font550,
    font650,
    font750,
    font850,
    font950,
    font1050,
    font1150,
    font1250,
    font1350,
    font1450,
    ParagraphXSmall: font100,
    ParagraphSmall: font200,
    ParagraphMedium: font300,
    ParagraphLarge: font400,
    LabelXSmall: font150,
    LabelSmall: font250,
    LabelMedium: font350,
    LabelLarge: font450,
    HeadingXSmall: font550,
    HeadingSmall: font650,
    HeadingMedium: font750,
    HeadingLarge: font850,
    HeadingXLarge: font950,
    HeadingXXLarge: font1050,
    DisplayXSmall: font1150,
    DisplaySmall: font1250,
    DisplayMedium: font1350,
    DisplayLarge: font1450,
    MonoParagraphXSmall: _objectSpread2(_objectSpread2({}, font100), {}, {
      fontFamily: monoFontFamily
    }),
    MonoParagraphSmall: _objectSpread2(_objectSpread2({}, font200), {}, {
      fontFamily: monoFontFamily
    }),
    MonoParagraphMedium: _objectSpread2(_objectSpread2({}, font300), {}, {
      fontFamily: monoFontFamily
    }),
    MonoParagraphLarge: _objectSpread2(_objectSpread2({}, font400), {}, {
      fontFamily: monoFontFamily
    }),
    MonoLabelXSmall: _objectSpread2(_objectSpread2({}, font150), {}, {
      fontFamily: monoFontFamily
    }),
    MonoLabelSmall: _objectSpread2(_objectSpread2({}, font250), {}, {
      fontFamily: monoFontFamily
    }),
    MonoLabelMedium: _objectSpread2(_objectSpread2({}, font350), {}, {
      fontFamily: monoFontFamily
    }),
    MonoLabelLarge: _objectSpread2(_objectSpread2({}, font450), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingXSmall: _objectSpread2(_objectSpread2({}, font550), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingSmall: _objectSpread2(_objectSpread2({}, font650), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingMedium: _objectSpread2(_objectSpread2({}, font750), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingLarge: _objectSpread2(_objectSpread2({}, font850), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingXLarge: _objectSpread2(_objectSpread2({}, font950), {}, {
      fontFamily: monoFontFamily
    }),
    MonoHeadingXXLarge: _objectSpread2(_objectSpread2({}, font1050), {}, {
      fontFamily: monoFontFamily
    }),
    MonoDisplayXSmall: _objectSpread2(_objectSpread2({}, font1150), {}, {
      fontFamily: monoFontFamily
    }),
    MonoDisplaySmall: _objectSpread2(_objectSpread2({}, font1250), {}, {
      fontFamily: monoFontFamily
    }),
    MonoDisplayMedium: _objectSpread2(_objectSpread2({}, font1350), {}, {
      fontFamily: monoFontFamily
    }),
    MonoDisplayLarge: _objectSpread2(_objectSpread2({}, font1450), {}, {
      fontFamily: monoFontFamily
    })
  };
};

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/shared/animation.js
var animation = {
  timing100: "100ms",
  timing200: "200ms",
  timing300: "300ms",
  timing400: "400ms",
  timing500: "500ms",
  timing600: "600ms",
  timing700: "700ms",
  timing800: "800ms",
  timing900: "900ms",
  timing1000: "1000ms",
  easeInCurve: "cubic-bezier(.8, .2, .6, 1)",
  easeOutCurve: "cubic-bezier(.2, .8, .4, 1)",
  easeInOutCurve: "cubic-bezier(0.4, 0, 0.2, 1)",
  easeInQuinticCurve: "cubic-bezier(0.755, 0.05, 0.855, 0.06)",
  easeOutQuinticCurve: "cubic-bezier(0.23, 1, 0.32, 1)",
  easeInOutQuinticCurve: "cubic-bezier(0.86, 0, 0.07, 1)",
  linearCurve: "cubic-bezier(0, 0, 1, 1)"
};
var animation_default = animation;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/shared/breakpoints.js
var breakpoints = {
  small: 320,
  medium: 600,
  large: 1136
};
var breakpoints_default = breakpoints;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/shared/grid.js
var grid = {
  columns: [4, 8, 12],
  gutters: [16, 36, 36],
  margins: [16, 36, 64],
  gaps: 0,
  unit: "px",
  maxWidth: 1280
};
var grid_default = grid;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/shared/media-query.js
var mediaQuery = {
  small: getMediaQuery(breakpoints_default.small),
  medium: getMediaQuery(breakpoints_default.medium),
  large: getMediaQuery(breakpoints_default.large)
};
var media_query_default = mediaQuery;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/shared/sizing.js
var sizing = {
  scale0: "2px",
  scale100: "4px",
  scale200: "6px",
  scale300: "8px",
  scale400: "10px",
  scale500: "12px",
  scale550: "14px",
  scale600: "16px",
  scale650: "18px",
  scale700: "20px",
  scale750: "22px",
  scale800: "24px",
  scale850: "28px",
  scale900: "32px",
  scale950: "36px",
  scale1000: "40px",
  scale1200: "48px",
  scale1400: "56px",
  scale1600: "64px",
  scale2400: "96px",
  scale3200: "128px",
  scale4800: "192px"
};
var sizing_default = sizing;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/light-theme/light-theme.js
function ownKeys3(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread3(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys3(Object(source), true).forEach(function(key) {
      _defineProperty3(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys3(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty3(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var LightTheme = {
  name: "light-theme",
  colors: _objectSpread3(_objectSpread3(_objectSpread3({}, color_tokens_default), color_component_tokens_default()), color_semantic_tokens_default()),
  animation: animation_default,
  breakpoints: breakpoints_default,
  borders: borders_default,
  direction: "auto",
  grid: grid_default,
  lighting: lighting_default,
  mediaQuery: media_query_default,
  sizing: sizing_default,
  typography: typography_default(),
  // TODO(#2318) Remove it in the next v11 major version.
  // Do not use.
  zIndex: {
    modal: 2e3
  }
};

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/utils/deep-merge.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function deepMerge(target) {
  target = target || {};
  var len = arguments.length <= 1 ? 0 : arguments.length - 1;
  var obj;
  var value;
  for (var i = 0; i < len; i++) {
    obj = (i + 1 < 1 || arguments.length <= i + 1 ? void 0 : arguments[i + 1]) || {};
    for (var key in obj) {
      if (_typeof(obj[key]) !== void 0) {
        value = obj[key];
        if (isCloneable(value)) {
          target[key] = deepMerge(
            /* eslint-disable-next-line no-mixed-operators */
            // @ts-ignore
            target[key] || Array.isArray(value) && [] || {},
            value
          );
        } else {
          target[key] = value;
        }
      }
    }
  }
  return target;
}
function isCloneable(obj) {
  return Array.isArray(obj) || {}.toString.call(obj) == "[object Object]";
}

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/move-theme/typography.js
var fontTokens = {
  primaryFontFamily: 'UberMoveText, system-ui, "Helvetica Neue", Helvetica, Arial, sans-serif'
};
var secondaryFontFamily = 'UberMove, UberMoveText, system-ui, "Helvetica Neue", Helvetica, Arial, sans-serif';
var monoFontFamily2 = 'UberMoveMono, "Lucida Console", Monaco, monospace';
var typography = {
  font1450: {
    fontFamily: secondaryFontFamily
  },
  font1350: {
    fontFamily: secondaryFontFamily
  },
  font1250: {
    fontFamily: secondaryFontFamily
  },
  font1150: {
    fontFamily: secondaryFontFamily
  },
  font1050: {
    fontFamily: secondaryFontFamily
  },
  font950: {
    fontFamily: secondaryFontFamily
  },
  font850: {
    fontFamily: secondaryFontFamily
  },
  font750: {
    fontFamily: secondaryFontFamily
  },
  font650: {
    fontFamily: secondaryFontFamily
  },
  font550: {
    fontFamily: secondaryFontFamily
  },
  DisplayLarge: {
    fontFamily: secondaryFontFamily
  },
  DisplayMedium: {
    fontFamily: secondaryFontFamily
  },
  DisplaySmall: {
    fontFamily: secondaryFontFamily
  },
  DisplayXSmall: {
    fontFamily: secondaryFontFamily
  },
  HeadingXXLarge: {
    fontFamily: secondaryFontFamily
  },
  HeadingXLarge: {
    fontFamily: secondaryFontFamily
  },
  HeadingLarge: {
    fontFamily: secondaryFontFamily
  },
  HeadingMedium: {
    fontFamily: secondaryFontFamily
  },
  HeadingSmall: {
    fontFamily: secondaryFontFamily
  },
  HeadingXSmall: {
    fontFamily: secondaryFontFamily
  },
  MonoParagraphXSmall: {
    fontFamily: monoFontFamily2
  },
  MonoParagraphSmall: {
    fontFamily: monoFontFamily2
  },
  MonoParagraphMedium: {
    fontFamily: monoFontFamily2
  },
  MonoParagraphLarge: {
    fontFamily: monoFontFamily2
  },
  MonoLabelXSmall: {
    fontFamily: monoFontFamily2
  },
  MonoLabelSmall: {
    fontFamily: monoFontFamily2
  },
  MonoLabelMedium: {
    fontFamily: monoFontFamily2
  },
  MonoLabelLarge: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingXSmall: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingSmall: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingMedium: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingLarge: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingXLarge: {
    fontFamily: monoFontFamily2
  },
  MonoHeadingXXLarge: {
    fontFamily: monoFontFamily2
  },
  MonoDisplayXSmall: {
    fontFamily: monoFontFamily2
  },
  MonoDisplaySmall: {
    fontFamily: monoFontFamily2
  },
  MonoDisplayMedium: {
    fontFamily: monoFontFamily2
  },
  MonoDisplayLarge: {
    fontFamily: monoFontFamily2
  }
};

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/move-theme/light-theme-with-move.js
var LightThemeMove = deepMerge({}, LightTheme, {
  name: "light-theme-with-move",
  // For the move theme we need to override typography values
  // in the default lightTheme with a font values that reference
  // our custom font family. In addition to it we want to replace some
  // of the fonts with an additional secondary font that specified
  // in `moveTypography`. For it we'll get the typography value built
  // with a custom font using `getTypography` helper and extend the result
  // value with the customized set of fonts that reference a secondary font
  typography: deepMerge(typography_default(fontTokens), typography)
});

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/dark-theme/color-tokens.js
var darkColorTokens = {
  // Primary Palette
  primaryA: colors_default.gray200,
  primaryB: colors_default.gray900,
  primary: colors_default.white,
  primary50: colors_default.gray50,
  primary100: colors_default.gray100,
  primary200: colors_default.gray200,
  primary300: colors_default.gray300,
  primary400: colors_default.gray400,
  primary500: colors_default.gray500,
  primary600: colors_default.gray600,
  primary700: colors_default.gray700,
  // Accent Palette
  accent: colors_default.blue400,
  accent50: colors_default.blue50,
  accent100: colors_default.blue100,
  accent200: colors_default.blue200,
  accent300: colors_default.blue300,
  accent400: colors_default.blue400,
  accent500: colors_default.blue500,
  accent600: colors_default.blue600,
  accent700: colors_default.blue700,
  // Negative Palette
  negative: colors_default.red500,
  negative50: colors_default.red50,
  negative100: colors_default.red100,
  negative200: colors_default.red200,
  negative300: colors_default.red300,
  negative400: colors_default.red400,
  negative500: colors_default.red500,
  negative600: colors_default.red600,
  negative700: colors_default.red700,
  // Warning Palette
  warning: colors_default.yellow500,
  warning50: colors_default.yellow50,
  warning100: colors_default.yellow100,
  warning200: colors_default.yellow200,
  warning300: colors_default.yellow300,
  warning400: colors_default.yellow400,
  warning500: colors_default.yellow500,
  warning600: colors_default.yellow600,
  warning700: colors_default.yellow700,
  // Positive Palette
  positive: colors_default.green400,
  positive50: colors_default.green50,
  positive100: colors_default.green100,
  positive200: colors_default.green200,
  positive300: colors_default.green300,
  positive400: colors_default.green400,
  positive500: colors_default.green500,
  positive600: colors_default.green600,
  positive700: colors_default.green700,
  // Monochrome Palette
  white: colors_default.white,
  black: colors_default.black,
  mono100: colors_default.gray300,
  mono200: colors_default.gray400,
  mono300: colors_default.gray500,
  mono400: colors_default.gray600,
  mono500: colors_default.gray700,
  // mono600 and mono900 are not in official brand tokens atm
  mono600: "#292929",
  mono700: "#1F1F1F",
  mono800: "#141414",
  mono900: "#111111",
  mono1000: colors_default.black,
  // Rating Palette,
  ratingInactiveFill: colors_default.gray500,
  ratingStroke: colors_default.gray700
};
var color_tokens_default2 = darkColorTokens;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/dark-theme/color-semantic-tokens.js
function ownKeys4(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread4(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys4(Object(source), true).forEach(function(key) {
      _defineProperty4(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys4(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty4(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var color_semantic_tokens_default2 = function() {
  var foundation = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : color_tokens_default2;
  var core = {
    // Background
    backgroundPrimary: foundation.primaryB,
    backgroundSecondary: colors_default.gray800,
    backgroundTertiary: colors_default.gray700,
    backgroundInversePrimary: foundation.primaryA,
    backgroundInverseSecondary: colors_default.gray300,
    // Content
    contentPrimary: colors_default.white,
    contentSecondary: colors_default.gray300,
    contentTertiary: colors_default.gray400,
    contentInversePrimary: colors_default.black,
    contentInverseSecondary: colors_default.gray700,
    contentInverseTertiary: colors_default.gray600,
    // Border
    borderOpaque: colors_default.gray700,
    // @ts-ignore
    borderTransparent: hexToRgb(foundation.primaryA, "0.08"),
    borderSelected: foundation.primaryA,
    borderInverseOpaque: colors_default.gray400,
    // @ts-ignore
    borderInverseTransparent: hexToRgb(foundation.primaryB, "0.2"),
    borderInverseSelected: foundation.primaryB
  };
  var coreExtensions = {
    // Backgrounds
    backgroundStateDisabled: colors_default.gray800,
    // @ts-ignore
    backgroundOverlayDark: hexToRgb(colors_default.black, "0.3"),
    // @ts-ignore
    backgroundOverlayLight: hexToRgb(colors_default.black, "0.08"),
    // @ts-ignore
    backgroundOverlayArt: hexToRgb(colors_default.black, "0.16"),
    backgroundAccent: foundation.accent,
    backgroundNegative: foundation.negative,
    backgroundWarning: foundation.warning,
    backgroundPositive: colors_default.green500,
    backgroundAccentLight: colors_default.blue700,
    backgroundPositiveLight: colors_default.green700,
    backgroundNegativeLight: colors_default.red700,
    backgroundWarningLight: colors_default.yellow700,
    backgroundAlwaysDark: colors_default.gray900,
    backgroundAlwaysLight: colors_default.gray100,
    // Content
    contentStateDisabled: colors_default.gray600,
    contentAccent: colors_default.blue300,
    contentOnColor: colors_default.white,
    contentOnColorInverse: colors_default.black,
    contentNegative: colors_default.red300,
    contentWarning: colors_default.yellow300,
    contentPositive: colors_default.green300,
    // Border
    borderStateDisabled: colors_default.gray800,
    borderAccent: colors_default.blue400,
    borderAccentLight: colors_default.blue500,
    borderNegative: colors_default.red500,
    borderWarning: colors_default.yellow500,
    borderPositive: colors_default.green500,
    borderNegativeLight: colors_default.red200,
    borderWarningLight: colors_default.yellow200,
    borderPositiveLight: colors_default.green200,
    // Programs
    safety: colors_default.blue400,
    eatsGreen400: colors_default.green400,
    freightBlue400: colors_default.cobalt400,
    jumpRed400: colors_default.red400,
    rewardsTier1: colors_default.blue400,
    rewardsTier2: colors_default.yellow400,
    rewardsTier3: colors_default.platinum400,
    rewardsTier4: colors_default.gray200,
    membership: colors_default.yellow600
  };
  return _objectSpread4(_objectSpread4({}, core), coreExtensions);
};

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/dark-theme/color-component-tokens.js
var tagHoverBackground2 = "rgba(255, 255, 255, 0.2)";
var color_component_tokens_default2 = function() {
  var themePrimitives = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : color_tokens_default2;
  return {
    bannerActionLowInfo: themePrimitives.accent600,
    bannerActionLowNegative: themePrimitives.negative600,
    bannerActionLowPositive: themePrimitives.positive600,
    bannerActionLowWarning: themePrimitives.warning600,
    bannerActionHighInfo: themePrimitives.accent500,
    bannerActionHighNegative: themePrimitives.negative600,
    bannerActionHighPositive: themePrimitives.positive600,
    bannerActionHighWarning: themePrimitives.warning600,
    // Buttons
    buttonPrimaryFill: themePrimitives.primaryA,
    buttonPrimaryText: themePrimitives.black,
    buttonPrimaryHover: themePrimitives.primary100,
    buttonPrimaryActive: themePrimitives.primary200,
    buttonPrimarySelectedText: themePrimitives.black,
    buttonPrimarySelectedFill: themePrimitives.primary200,
    buttonPrimarySpinnerForeground: themePrimitives.primary700,
    buttonPrimarySpinnerBackground: themePrimitives.primary300,
    buttonSecondaryFill: themePrimitives.primary700,
    buttonSecondaryText: themePrimitives.primary,
    buttonSecondaryHover: themePrimitives.primary600,
    buttonSecondaryActive: themePrimitives.primary500,
    buttonSecondarySelectedText: themePrimitives.primary,
    buttonSecondarySelectedFill: themePrimitives.primary500,
    buttonSecondarySpinnerForeground: themePrimitives.white,
    buttonSecondarySpinnerBackground: themePrimitives.primary400,
    buttonTertiaryFill: "transparent",
    buttonTertiaryText: themePrimitives.primary,
    buttonTertiaryHover: themePrimitives.primary700,
    buttonTertiaryActive: themePrimitives.primary600,
    buttonTertiarySelectedText: themePrimitives.primary,
    buttonTertiarySelectedFill: themePrimitives.primary600,
    buttonTertiaryDisabledActiveFill: themePrimitives.primary700,
    buttonTertiaryDisabledActiveText: themePrimitives.mono300,
    buttonTertiarySpinnerForeground: themePrimitives.primary50,
    buttonTertiarySpinnerBackground: themePrimitives.primary500,
    buttonDisabledFill: themePrimitives.mono600,
    buttonDisabledText: themePrimitives.mono300,
    buttonDisabledActiveFill: themePrimitives.mono200,
    buttonDisabledActiveText: themePrimitives.primary500,
    buttonDisabledSpinnerForeground: themePrimitives.mono200,
    buttonDisabledSpinnerBackground: themePrimitives.mono400,
    // Breadcrumbs
    breadcrumbsText: themePrimitives.white,
    breadcrumbsSeparatorFill: themePrimitives.mono200,
    // Datepicker
    calendarBackground: themePrimitives.mono800,
    calendarForeground: themePrimitives.white,
    calendarForegroundDisabled: themePrimitives.mono300,
    calendarHeaderBackground: themePrimitives.mono800,
    calendarHeaderForeground: themePrimitives.primary,
    calendarHeaderBackgroundActive: themePrimitives.primary600,
    calendarHeaderForegroundDisabled: themePrimitives.primary500,
    calendarDayForegroundPseudoSelected: themePrimitives.primary,
    calendarDayBackgroundPseudoSelectedHighlighted: themePrimitives.primary600,
    calendarDayForegroundPseudoSelectedHighlighted: themePrimitives.primary,
    calendarDayBackgroundSelected: themePrimitives.primary,
    calendarDayForegroundSelected: themePrimitives.black,
    calendarDayBackgroundSelectedHighlighted: themePrimitives.primary100,
    calendarDayForegroundSelectedHighlighted: themePrimitives.black,
    // Combobox
    comboboxListItemFocus: themePrimitives.mono600,
    comboboxListItemHover: themePrimitives.mono500,
    // FileUploader
    fileUploaderBackgroundColor: themePrimitives.mono700,
    fileUploaderBackgroundColorActive: themePrimitives.mono600,
    fileUploaderBorderColorActive: themePrimitives.primary,
    fileUploaderBorderColorDefault: themePrimitives.mono500,
    fileUploaderMessageColor: themePrimitives.mono100,
    // Links
    linkText: themePrimitives.primary,
    linkVisited: themePrimitives.primary100,
    linkHover: themePrimitives.primary200,
    linkActive: themePrimitives.primary300,
    // List
    listHeaderFill: themePrimitives.mono600,
    listBodyFill: themePrimitives.mono800,
    // ProgressSteps
    progressStepsCompletedText: themePrimitives.black,
    progressStepsCompletedFill: themePrimitives.primary,
    progressStepsActiveText: themePrimitives.black,
    progressStepsActiveFill: themePrimitives.primary,
    // Modal
    modalCloseColor: themePrimitives.mono300,
    modalCloseColorHover: themePrimitives.mono400,
    modalCloseColorFocus: themePrimitives.mono400,
    // Notification
    notificationInfoBackground: themePrimitives.accent700,
    notificationInfoText: themePrimitives.primaryA,
    notificationPositiveBackground: themePrimitives.positive700,
    notificationPositiveText: themePrimitives.primaryA,
    notificationWarningBackground: themePrimitives.warning700,
    notificationWarningText: themePrimitives.primaryA,
    notificationNegativeBackground: themePrimitives.negative700,
    notificationNegativeText: themePrimitives.primaryA,
    // Tag
    // Custom ramps
    tagFontDisabledRampUnit: "600",
    tagSolidFontRampUnit: "0",
    tagSolidRampUnit: "500",
    tagOutlinedFontRampUnit: "500",
    tagOutlinedRampUnit: "500",
    // Deprecated
    tagSolidHoverRampUnit: "500",
    tagSolidActiveRampUnit: "400",
    tagSolidDisabledRampUnit: "700",
    tagSolidFontHoverRampUnit: "100",
    tagLightRampUnit: "700",
    tagLightHoverRampUnit: "700",
    tagLightActiveRampUnit: "600",
    tagLightFontRampUnit: "100",
    tagLightFontHoverRampUnit: "100",
    tagOutlinedActiveRampUnit: "300",
    tagOutlinedHoverRampUnit: "800",
    tagOutlinedFontHoverRampUnit: "100",
    // Neutral
    tagNeutralOutlinedFont: themePrimitives.mono100,
    tagNeutralOutlinedBackground: themePrimitives.mono200,
    tagNeutralSolidFont: themePrimitives.black,
    // not much we can do to get the correct gray here
    tagNeutralSolidBackground: themePrimitives.primary200,
    tagNeutralFontDisabled: themePrimitives.mono400,
    tagNeutralOutlinedDisabled: themePrimitives.mono500,
    // Deprecated
    tagNeutralSolidHover: themePrimitives.mono600,
    tagNeutralSolidActive: themePrimitives.mono500,
    tagNeutralSolidDisabled: themePrimitives.mono700,
    tagNeutralSolidFontHover: themePrimitives.mono200,
    tagNeutralLightBackground: themePrimitives.mono800,
    tagNeutralLightHover: themePrimitives.mono800,
    tagNeutralLightActive: themePrimitives.mono700,
    tagNeutralLightDisabled: themePrimitives.mono700,
    tagNeutralLightFont: themePrimitives.mono200,
    tagNeutralLightFontHover: themePrimitives.mono200,
    tagNeutralOutlinedActive: themePrimitives.mono400,
    tagNeutralOutlinedFontHover: themePrimitives.mono100,
    tagNeutralOutlinedHover: tagHoverBackground2,
    // Primary
    tagPrimaryOutlinedFont: themePrimitives.primary200,
    tagPrimaryOutlinedBackground: themePrimitives.primary400,
    tagPrimarySolidFont: themePrimitives.black,
    tagPrimarySolidBackground: themePrimitives.primary200,
    tagPrimaryFontDisabled: themePrimitives.primary600,
    tagPrimaryOutlinedDisabled: themePrimitives.primary700,
    // Deprecated
    tagPrimarySolidHover: themePrimitives.primary700,
    tagPrimarySolidActive: themePrimitives.primary400,
    tagPrimarySolidDisabled: themePrimitives.primary700,
    tagPrimarySolidFontHover: themePrimitives.primary100,
    tagPrimaryLightBackground: themePrimitives.primary700,
    tagPrimaryLightHover: themePrimitives.primary700,
    tagPrimaryLightActive: themePrimitives.primary600,
    tagPrimaryLightDisabled: themePrimitives.primary700,
    tagPrimaryLightFont: themePrimitives.primary100,
    tagPrimaryLightFontHover: themePrimitives.primary100,
    tagPrimaryOutlinedActive: themePrimitives.primary600,
    tagPrimaryOutlinedFontHover: themePrimitives.primary200,
    tagPrimaryOutlinedHover: tagHoverBackground2,
    // Accent
    tagAccentOutlinedFont: themePrimitives.accent200,
    tagAccentOutlinedBackground: themePrimitives.accent500,
    tagAccentSolidFont: themePrimitives.white,
    tagAccentSolidBackground: themePrimitives.accent500,
    tagAccentFontDisabled: themePrimitives.accent600,
    tagAccentOutlinedDisabled: themePrimitives.accent700,
    // Deprecated
    tagAccentSolidHover: themePrimitives.accent500,
    tagAccentSolidActive: themePrimitives.accent400,
    tagAccentSolidDisabled: themePrimitives.accent700,
    tagAccentSolidFontHover: themePrimitives.accent100,
    tagAccentLightBackground: themePrimitives.accent700,
    tagAccentLightHover: themePrimitives.accent700,
    tagAccentLightActive: themePrimitives.accent600,
    tagAccentLightDisabled: themePrimitives.accent700,
    tagAccentLightFont: themePrimitives.accent100,
    tagAccentLightFontHover: themePrimitives.accent100,
    tagAccentOutlinedActive: themePrimitives.accent300,
    tagAccentOutlinedFontHover: themePrimitives.accent200,
    tagAccentOutlinedHover: tagHoverBackground2,
    // Positive
    tagPositiveOutlinedFont: themePrimitives.positive300,
    tagPositiveOutlinedBackground: themePrimitives.positive500,
    tagPositiveSolidFont: themePrimitives.white,
    tagPositiveSolidBackground: themePrimitives.positive500,
    tagPositiveFontDisabled: themePrimitives.positive600,
    tagPositiveOutlinedDisabled: themePrimitives.positive700,
    // Deprecated
    tagPositiveSolidHover: themePrimitives.positive500,
    tagPositiveSolidActive: themePrimitives.positive400,
    tagPositiveSolidDisabled: themePrimitives.positive700,
    tagPositiveSolidFontHover: themePrimitives.positive100,
    tagPositiveLightBackground: themePrimitives.positive700,
    tagPositiveLightHover: themePrimitives.positive700,
    tagPositiveLightActive: themePrimitives.positive600,
    tagPositiveLightDisabled: themePrimitives.positive700,
    tagPositiveLightFont: themePrimitives.positive100,
    tagPositiveLightFontHover: themePrimitives.positive100,
    tagPositiveOutlinedActive: themePrimitives.positive300,
    tagPositiveOutlinedFontHover: themePrimitives.positive300,
    tagPositiveOutlinedHover: tagHoverBackground2,
    // Warning
    tagWarningOutlinedFont: themePrimitives.warning300,
    tagWarningOutlinedBackground: themePrimitives.warning500,
    tagWarningSolidFont: themePrimitives.black,
    tagWarningSolidBackground: themePrimitives.warning500,
    tagWarningFontDisabled: themePrimitives.warning600,
    tagWarningOutlinedDisabled: themePrimitives.warning700,
    // Deprecated
    tagWarningSolidHover: themePrimitives.warning500,
    tagWarningSolidActive: themePrimitives.warning400,
    tagWarningSolidDisabled: themePrimitives.warning700,
    tagWarningSolidFontHover: themePrimitives.warning100,
    tagWarningLightBackground: themePrimitives.warning700,
    tagWarningLightHover: themePrimitives.warning700,
    tagWarningLightActive: themePrimitives.warning600,
    tagWarningLightDisabled: themePrimitives.warning700,
    tagWarningLightFont: themePrimitives.warning100,
    tagWarningLightFontHover: themePrimitives.warning100,
    tagWarningOutlinedActive: themePrimitives.warning300,
    tagWarningOutlinedFontHover: themePrimitives.warning300,
    tagWarningOutlinedHover: tagHoverBackground2,
    // Negative
    tagNegativeOutlinedFont: themePrimitives.negative300,
    tagNegativeOutlinedBackground: themePrimitives.negative500,
    tagNegativeSolidFont: themePrimitives.white,
    tagNegativeSolidBackground: themePrimitives.negative500,
    tagNegativeFontDisabled: themePrimitives.negative600,
    tagNegativeOutlinedDisabled: themePrimitives.negative700,
    // Deprecated
    tagNegativeSolidHover: themePrimitives.negative500,
    tagNegativeSolidActive: themePrimitives.negative400,
    tagNegativeSolidDisabled: themePrimitives.negative700,
    tagNegativeSolidFontHover: themePrimitives.negative100,
    tagNegativeLightBackground: themePrimitives.negative700,
    tagNegativeLightHover: themePrimitives.negative700,
    tagNegativeLightActive: themePrimitives.negative600,
    tagNegativeLightDisabled: themePrimitives.negative700,
    tagNegativeLightFont: themePrimitives.negative100,
    tagNegativeLightFontHover: themePrimitives.negative100,
    tagNegativeOutlinedActive: themePrimitives.negative300,
    tagNegativeOutlinedFontHover: themePrimitives.negative300,
    tagNegativeOutlinedHover: tagHoverBackground2,
    // Table
    tableHeadBackgroundColor: themePrimitives.mono700,
    tableBackground: themePrimitives.mono800,
    tableStripedBackground: themePrimitives.mono700,
    tableFilter: themePrimitives.mono400,
    tableFilterHeading: themePrimitives.mono300,
    tableFilterBackground: themePrimitives.mono700,
    tableFilterFooterBackground: themePrimitives.mono800,
    // Toast
    toastText: themePrimitives.white,
    toastPrimaryText: themePrimitives.white,
    toastInfoBackground: themePrimitives.accent400,
    toastInfoText: themePrimitives.white,
    toastPositiveBackground: themePrimitives.positive400,
    toastPositiveText: themePrimitives.white,
    toastWarningBackground: themePrimitives.warning400,
    toastWarningText: themePrimitives.black,
    toastNegativeBackground: themePrimitives.negative400,
    toastNegativeText: themePrimitives.white,
    // Toggle
    toggleFill: themePrimitives.mono300,
    toggleFillChecked: themePrimitives.primary,
    toggleFillDisabled: themePrimitives.mono600,
    toggleTrackFill: themePrimitives.mono400,
    toggleTrackFillDisabled: themePrimitives.mono700,
    // Tick
    tickFill: themePrimitives.mono1000,
    tickFillHover: themePrimitives.mono700,
    tickFillActive: themePrimitives.mono600,
    tickFillSelected: themePrimitives.primary,
    tickFillSelectedHover: themePrimitives.primary50,
    tickFillSelectedHoverActive: themePrimitives.primary100,
    tickFillError: themePrimitives.negative700,
    tickFillErrorHover: themePrimitives.negative600,
    tickFillErrorHoverActive: themePrimitives.negative500,
    tickFillErrorSelected: themePrimitives.negative500,
    tickFillErrorSelectedHover: themePrimitives.negative600,
    tickFillErrorSelectedHoverActive: themePrimitives.negative700,
    tickFillDisabled: themePrimitives.mono500,
    tickBorder: themePrimitives.mono300,
    tickBorderError: themePrimitives.negative400,
    tickMarkFill: themePrimitives.black,
    tickMarkFillError: themePrimitives.white,
    tickMarkFillDisabled: themePrimitives.mono800,
    // Slider/Toggle
    sliderTrackFill: "transparent",
    sliderHandleFill: themePrimitives.primaryA,
    sliderHandleFillDisabled: themePrimitives.primary500,
    sliderHandleInnerFill: themePrimitives.primaryA,
    sliderTrackFillHover: themePrimitives.mono500,
    sliderTrackFillActive: themePrimitives.mono400,
    sliderTrackFillDisabled: themePrimitives.mono700,
    sliderHandleInnerFillDisabled: themePrimitives.mono500,
    sliderHandleInnerFillSelectedHover: themePrimitives.primary600,
    sliderHandleInnerFillSelectedActive: themePrimitives.primary700,
    // Input
    inputBorder: themePrimitives.mono600,
    inputFill: themePrimitives.mono600,
    inputFillActive: themePrimitives.mono500,
    inputFillError: themePrimitives.negative700,
    inputFillDisabled: themePrimitives.mono800,
    inputFillPositive: themePrimitives.positive700,
    inputTextDisabled: themePrimitives.mono500,
    inputBorderError: themePrimitives.negative400,
    inputBorderPositive: themePrimitives.positive400,
    inputEnhancerFill: themePrimitives.mono500,
    inputEnhancerFillDisabled: themePrimitives.mono700,
    inputEnhancerTextDisabled: themePrimitives.mono500,
    inputPlaceholder: themePrimitives.mono300,
    inputPlaceholderDisabled: themePrimitives.mono500,
    // Menu
    menuFill: themePrimitives.mono600,
    menuFillHover: themePrimitives.mono700,
    menuFontDefault: themePrimitives.mono300,
    menuFontDisabled: themePrimitives.mono400,
    menuFontHighlighted: themePrimitives.white,
    menuFontSelected: themePrimitives.white,
    // Tab
    tabBarFill: themePrimitives.mono1000,
    tabColor: themePrimitives.mono300,
    // Spinner
    spinnerTrackFill: themePrimitives.mono100,
    // Progress bar
    progressbarTrackFill: themePrimitives.mono100,
    // Tooltip
    tooltipBackground: themePrimitives.mono200,
    tooltipText: themePrimitives.mono1000
  };
};

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/dark-theme/borders.js
var borders2 = deepMerge({}, borders_default, {
  border100: {
    borderColor: "hsla(0, 0%, 100%, 0.04)"
  },
  border200: {
    borderColor: "hsla(0, 0%, 100%, 0.08)"
  },
  border300: {
    borderColor: "hsla(0, 0%, 100%, 0.12)"
  },
  border400: {
    borderColor: "hsla(0, 0%, 100%, 0.16)"
  },
  border500: {
    borderColor: "hsla(0, 0%, 100%, 0.2)"
  },
  border600: {
    borderColor: "hsla(0, 0%, 100%, 0.24)"
  }
});
var borders_default2 = borders2;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/dark-theme/dark-theme.js
function ownKeys5(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread5(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys5(Object(source), true).forEach(function(key) {
      _defineProperty5(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys5(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty5(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var DarkTheme = {
  name: "dark-theme",
  colors: _objectSpread5(_objectSpread5(_objectSpread5({}, color_tokens_default2), color_component_tokens_default2()), color_semantic_tokens_default2()),
  animation: animation_default,
  breakpoints: breakpoints_default,
  borders: borders_default2,
  direction: "auto",
  grid: grid_default,
  lighting: lighting_default,
  mediaQuery: media_query_default,
  sizing: sizing_default,
  typography: typography_default(),
  // TODO(#2318) Remove it in the next v11 major version.
  // Do not use.
  zIndex: {
    modal: 2e3
  }
};

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/move-theme/dark-theme-with-move.js
var DarkThemeMove = deepMerge({}, DarkTheme, {
  name: "dark-theme-with-move",
  // For the move theme we need to override typography values
  // in the default darkTheme with a font values that reference
  // our custom font family. In addition to it we want to replace some
  // of the fonts with an additional secondary font that specified
  // in `moveTypography`. For it we'll get the typography value built
  // with a custom font using `getTypography` helper and extend the result
  // value with the customized set of fonts that reference a secondary font
  typography: deepMerge(typography_default(fontTokens), typography)
});

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/dark-theme/primitives.js
function ownKeys6(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread6(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys6(Object(source), true).forEach(function(key) {
      _defineProperty6(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys6(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty6(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var primitives = _objectSpread6(_objectSpread6({}, color_tokens_default2), defaultFontTokens);

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/themes/light-theme/primitives.js
function ownKeys7(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread7(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys7(Object(source), true).forEach(function(key) {
      _defineProperty7(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys7(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty7(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
var primitives2 = _objectSpread7(_objectSpread7({}, color_tokens_default), defaultFontTokens);

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/styles/theme-provider.js
var ThemeContext = React.createContext(LightTheme);

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/styles/styled.js
var React3 = __toESM(require_react());

// .yarn/__virtual__/styletron-react-virtual-c4aa43ba8e/0/cache/styletron-react-npm-6.1.0-c355181e38-ccfa516ee3.zip/node_modules/styletron-react/dist-browser-esm/index.js
var React2 = __toESM(require_react());

// .yarn/cache/styletron-standard-npm-3.1.0-24fb075f2b-44fb0b9a1b.zip/node_modules/styletron-standard/dist-browser-esm/index.js
function driver(style, styletron) {
  const tx = renderDeclarativeRules(style, styletron);
  return styletron.renderStyle(tx);
}
function getInitialStyle() {
  return {};
}
function renderDeclarativeRules(style, styletron) {
  for (const key in style) {
    const val = style[key];
    if (key === "animationName" && typeof val !== "string") {
      style.animationName = styletron.renderKeyframes(val);
      continue;
    }
    if (key === "fontFamily" && typeof val !== "string") {
      if (Array.isArray(val)) {
        let result = "";
        for (const font of val) {
          if (typeof font === "object") {
            result += `${styletron.renderFontFace(font)},`;
          } else if (typeof font === "string") {
            result += `${font},`;
          }
        }
        style.fontFamily = result.slice(0, -1);
        continue;
      } else if (val === void 0) {
        continue;
      } else {
        style.fontFamily = styletron.renderFontFace(val);
        continue;
      }
    }
    if (typeof val === "object" && val !== null) {
      renderDeclarativeRules(val, styletron);
    }
  }
  return style;
}

// .yarn/__virtual__/styletron-react-virtual-c4aa43ba8e/0/cache/styletron-react-npm-6.1.0-c355181e38-ccfa516ee3.zip/node_modules/styletron-react/dist-browser-esm/dev-tool.js
function addDebugMetadata(instance, stackIndex) {
  const {
    stack,
    stacktrace,
    message
  } = new Error("stacktrace source");
  instance.debug = {
    stackInfo: {
      stack,
      stacktrace,
      message
    },
    stackIndex
  };
}
var setupDevtoolsExtension = () => {
  const atomicMap = {};
  const extensionsMap = /* @__PURE__ */ new Map();
  const stylesMap = /* @__PURE__ */ new Map();
  const getStyles = (className) => {
    const styles = {};
    if (typeof className !== "string") {
      return styles;
    }
    if (stylesMap.has(className)) {
      styles.styles = stylesMap.get(className);
      const classList = className.split(" ");
      if (classList.length) {
        const classes = {};
        classList.forEach((singleClassName) => {
          classes[singleClassName] = atomicMap[singleClassName];
        });
        styles.classes = classes;
      }
      if (extensionsMap.has(className)) {
        const extension = extensionsMap.get(className);
        styles.extends = extension;
      }
      return styles;
    }
  };
  window.__STYLETRON_DEVTOOLS__ = {
    atomicMap,
    extensionsMap,
    stylesMap,
    getStyles
  };
};

// .yarn/__virtual__/styletron-react-virtual-c4aa43ba8e/0/cache/styletron-react-npm-6.1.0-c355181e38-ccfa516ee3.zip/node_modules/styletron-react/dist-browser-esm/index.js
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var noopEngine = {
  renderStyle: () => "",
  renderKeyframes: () => "",
  renderFontFace: () => ""
};
var StyletronContext = React2.createContext(noopEngine);
var HydrationContext = React2.createContext(false);
var DebugEngineContext = React2.createContext(void 0);
var DevProvider = class extends React2.Component {
  constructor(props) {
    super(props);
    this.state = {
      hydrating: Boolean(props.debugAfterHydration)
    };
  }
  componentDidMount() {
    if (true) {
      if (this.state.hydrating === true) {
        this.setState({
          hydrating: false
        });
      }
    }
  }
  render() {
    return React2.createElement(StyletronContext.Provider, {
      value: this.props.value
    }, React2.createElement(DebugEngineContext.Provider, {
      value: this.props.debug
    }, React2.createElement(HydrationContext.Provider, {
      value: this.state.hydrating
    }, this.props.children)));
  }
};
var Provider = true ? DevProvider : StyletronContext.Provider;
if (!window.__STYLETRON_DEVTOOLS__) {
  setupDevtoolsExtension();
}
function checkNoopEngine(engine) {
  if (true) {
    engine === noopEngine && // eslint-disable-next-line no-console
    console.warn(true ? `
Styletron has been switched to a no-op (test) mode.

A Styletron styled component was rendered, but no Styletron engine instance was provided in React context.

Did you forget to provide a Styletron engine instance to React context via using the Styletron provider component?

Note: Providers and Consumers must come from the exact same React.createContext call to work.
If your app has multiple instances of the "styletron-react" package in your node_module tree,
your Provider may be coming from a different React.createContext call, which means the styled components
will not recieve the provided engine instance. This scenario can arise, for example, when using "npm link".
` : `Styletron Provider is not set up. Defaulting to no-op.`);
  }
}
function useStyletron() {
  const styletronEngine = React2.useContext(StyletronContext);
  const debugEngine = React2.useContext(DebugEngineContext);
  const hydrating = React2.useContext(HydrationContext);
  checkNoopEngine(styletronEngine);
  const debugClassName = React2.useRef("");
  const prevDebugClassNameDeps = React2.useRef([]);
  return [function css(style) {
    const className = driver(style, styletronEngine);
    if (false) {
      return className;
    }
    const {
      stack,
      message
    } = new Error("stacktrace source");
    const nextDeps = [debugEngine, hydrating];
    if (prevDebugClassNameDeps.current[0] !== nextDeps[0] || prevDebugClassNameDeps.current[1] !== nextDeps[1]) {
      if (debugEngine && !hydrating) {
        debugClassName.current = debugEngine.debug({
          stackInfo: {
            stack,
            message
          },
          stackIndex: 1
        });
      }
      prevDebugClassNameDeps.current = nextDeps;
    }
    if (debugClassName.current) {
      return `${debugClassName.current} ${className}`;
    }
    return className;
  }];
}
function createStyled({
  getInitialStyle: getInitialStyle2,
  driver: driver2,
  wrapper: wrapper3
}) {
  function styled3(base, styleArg) {
    if (true) {
      if (base.__STYLETRON__) {
        console.warn("It appears you are passing a styled component into `styled`.");
        console.warn("For composition with existing styled components, use `withStyle` or `withTransform` instead.");
      }
    }
    const baseStyletron = {
      reducers: [],
      base,
      driver: driver2,
      getInitialStyle: getInitialStyle2,
      wrapper: wrapper3
    };
    if (true) {
      addDebugMetadata(baseStyletron, 2);
    }
    return createStyledElementComponent(autoComposeShallow(baseStyletron, styleArg));
  }
  return styled3;
}
var styled = createStyled({
  getInitialStyle,
  driver,
  wrapper: (Component2) => Component2
});
var withStyleDeep = (component, styleArg) => {
  const styletron = component.__STYLETRON__;
  if (true) {
    if (!styletron) {
      console.warn("The first parameter to `withStyle` must be a styled component (without extra wrappers).");
    }
  }
  if (true) {
    addDebugMetadata(styletron, 2);
    return createStyledElementComponent(addExtension(autoComposeDeep(styletron, styleArg), component, styleArg));
  } else {
    return createStyledElementComponent(autoComposeDeep(styletron, styleArg));
  }
};
var withStyle = withStyleDeep;
function autoComposeShallow(styletron, styleArg) {
  if (typeof styleArg === "function") {
    return dynamicComposeShallow(styletron, styleArg);
  }
  return staticComposeShallow(styletron, styleArg);
}
function addExtension(composed, component, styleArg) {
  return {
    ...composed,
    ext: {
      with: styleArg,
      name: component.displayName,
      base: component.__STYLETRON__.base,
      getInitialStyle: component.__STYLETRON__.reducers.length ? component.__STYLETRON__.reducers[0].reducer : component.__STYLETRON__.getInitialStyle
    }
  };
}
function autoComposeDeep(styletron, styleArg) {
  if (typeof styleArg === "function") {
    return dynamicComposeDeep(styletron, styleArg);
  }
  return staticComposeDeep(styletron, styleArg);
}
function staticComposeShallow(styletron, style) {
  return composeStatic(styletron, createShallowMergeReducer(style));
}
function staticComposeDeep(styletron, style) {
  return composeStatic(styletron, createDeepMergeReducer(style));
}
function dynamicComposeShallow(styletron, styleFn) {
  return composeDynamic(styletron, (style, props) => shallowMerge(style, styleFn(props)));
}
function dynamicComposeDeep(styletron, styleFn) {
  return composeDynamic(styletron, (style, props) => deepMerge2(style, styleFn(props)));
}
function createShallowMergeReducer(style) {
  return {
    reducer: (inputStyle) => shallowMerge(inputStyle, style),
    assignmentCommutative: true,
    factory: createShallowMergeReducer,
    style
  };
}
function createDeepMergeReducer(style) {
  return {
    reducer: (inputStyle) => deepMerge2(inputStyle, style),
    assignmentCommutative: true,
    factory: createDeepMergeReducer,
    style
  };
}
function composeStatic(styletron, reducerContainer) {
  if (styletron.reducers.length === 0) {
    const style = reducerContainer.reducer(styletron.getInitialStyle());
    const result = {
      reducers: styletron.reducers,
      base: styletron.base,
      driver: styletron.driver,
      wrapper: styletron.wrapper,
      getInitialStyle: () => style
    };
    if (true) {
      result.debug = styletron.debug;
    }
    return result;
  } else {
    const last = styletron.reducers[0];
    if (last.assignmentCommutative === true && reducerContainer.assignmentCommutative === true) {
      const composed = reducerContainer.reducer(last.style);
      const result = {
        getInitialStyle: styletron.getInitialStyle,
        base: styletron.base,
        driver: styletron.driver,
        wrapper: styletron.wrapper,
        reducers: [last.factory(composed)].concat(styletron.reducers.slice(1))
      };
      if (true) {
        result.debug = styletron.debug;
      }
      return result;
    }
    return composeDynamic(styletron, reducerContainer.reducer);
  }
}
function composeDynamic(styletron, reducer) {
  const composed = {
    getInitialStyle: styletron.getInitialStyle,
    base: styletron.base,
    driver: styletron.driver,
    wrapper: styletron.wrapper,
    // @ts-ignore
    reducers: [{
      assignmentCommutative: false,
      reducer
    }].concat(styletron.reducers)
  };
  if (true) {
    composed.debug = styletron.debug;
  }
  return composed;
}
function createStyledElementComponent(styletron) {
  const {
    reducers,
    base,
    driver: driver2,
    wrapper: wrapper3,
    getInitialStyle: getInitialStyle2,
    ext
  } = styletron;
  if (true) {
    var debugStackInfo, debugStackIndex;
    if (styletron.debug) {
      debugStackInfo = styletron.debug.stackInfo;
      debugStackIndex = styletron.debug.stackIndex;
    }
  }
  if (true) {
    var debugClassName;
  }
  const StyledElement = React2.forwardRef((props, ref) => {
    const styletron2 = React2.useContext(StyletronContext);
    const debugEngine = React2.useContext(DebugEngineContext);
    const hydrating = React2.useContext(HydrationContext);
    checkNoopEngine(styletron2);
    const elementProps = omitPrefixedKeys(props);
    let style = resolveStyle(getInitialStyle2, reducers, props);
    if (props.$style) {
      if (typeof props.$style === "function") {
        style = deepMerge2(style, props.$style(props));
      } else {
        style = deepMerge2(style, props.$style);
      }
    }
    const styleClassString = driver2(style, styletron2);
    const Element = props.$as ? props.$as : base;
    elementProps.className = props.className ? `${props.className} ${styleClassString}` : styleClassString;
    if (debugEngine && !hydrating) {
      if (!debugClassName) {
        debugClassName = debugEngine.debug({
          stackInfo: debugStackInfo,
          stackIndex: debugStackIndex
        });
      }
      const joined = `${debugClassName} ${elementProps.className}`;
      elementProps.className = joined;
    }
    if (window.__STYLETRON_DEVTOOLS__) {
      window.__STYLETRON_DEVTOOLS__.stylesMap.set(elementProps.className, style);
      if (ext) {
        window.__STYLETRON_DEVTOOLS__.extensionsMap.set(elementProps.className, {
          base: ext.base,
          displayName: ext.name,
          initialStyles: ext.getInitialStyle({}, props),
          styleOverrides: typeof ext.with === "function" ? ext.with(props) : ext.with
        });
      }
    }
    if (props.$ref) {
      console.warn("The prop `$ref` has been deprecated. Use `ref` instead. Refs are now forwarded with React.forwardRef.");
    }
    return React2.createElement(Element, _extends({}, elementProps, {
      ref: ref || props.$ref
    }));
  });
  const Wrapped = wrapper3(StyledElement);
  Wrapped.__STYLETRON__ = {
    base,
    reducers,
    driver: driver2,
    wrapper: wrapper3,
    getInitialStyle: getInitialStyle2
  };
  if (true) {
    let displayName;
    if (typeof base === "string") {
      displayName = base;
    } else if (base.displayName) {
      displayName = base.displayName;
    } else if (base.name) {
      displayName = base.name;
    } else {
      displayName = "Unknown";
    }
    Wrapped.displayName = `Styled(${displayName})`;
  }
  return Wrapped;
}
function resolveStyle(getInitialStyle2, reducers, props) {
  let result = getInitialStyle2();
  let i = reducers.length;
  while (i--) {
    const reducer = reducers[i].reducer;
    result = reducer(result, props);
  }
  return result;
}
function isObject(x) {
  return typeof x === "object" && x !== null;
}
function omitPrefixedKeys(source) {
  const result = {};
  for (const key in source) {
    if (key[0] !== "$") {
      result[key] = source[key];
    }
  }
  return result;
}
function deepMerge2(a, b) {
  const result = assign({}, a);
  for (const key in b) {
    const val = b[key];
    if (isObject(val) && isObject(a[key])) {
      result[key] = deepMerge2(a[key], val);
    } else {
      result[key] = val;
    }
  }
  return result;
}
function shallowMerge(a, b) {
  return assign(assign({}, a), b);
}
function assign(target, source) {
  for (const key in source) {
    target[key] = source[key];
  }
  return target;
}

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/styles/styled.js
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _extends2() {
  _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
var wrapper = function wrapper2(StyledComponent) {
  return React3.forwardRef(function(props, ref) {
    return React3.createElement(ThemeContext.Consumer, null, function(theme) {
      return React3.createElement(StyledComponent, _extends2({
        ref
      }, props, {
        $theme: theme
      }));
    });
  });
};
function createThemedStyled() {
  return createStyled({
    wrapper,
    getInitialStyle,
    driver
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
  });
}
var styled2 = createThemedStyled();
function createThemedWithStyle() {
  return withStyle;
}
var withStyle2 = createThemedWithStyle();
function createThemedUseStyletron() {
  return function() {
    var theme = React3.useContext(ThemeContext);
    var _styletronUseStyletro = useStyletron(), _styletronUseStyletro2 = _slicedToArray(_styletronUseStyletro, 1), css = _styletronUseStyletro2[0];
    return [css, theme];
  };
}
var useStyletron2 = createThemedUseStyletron();

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/styles/index.js
var ThemeConsumer = ThemeContext.Consumer;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/block/styled-components.js
function constrainToNull(value) {
  if (value === void 0) {
    return null;
  }
  return value;
}
function build(breakpoints2) {
  var styles = {};
  var mediaQueries = getMediaQueries(breakpoints2);
  return {
    // @ts-ignore
    apply: function apply(_ref) {
      var property = _ref.property, _ref$transform = _ref.transform, transform = _ref$transform === void 0 ? function(x) {
        return x;
      } : _ref$transform, value = _ref.value;
      if (value === null || value === void 0) {
        return;
      }
      if (Array.isArray(value)) {
        value.forEach(function(v, index) {
          if (index === 0) {
            styles[property] = constrainToNull(transform(v));
            return;
          }
          var mediaQuery2 = mediaQueries[index - 1];
          if (!styles[mediaQuery2]) {
            styles[mediaQuery2] = {};
          }
          styles[mediaQuery2][property] = constrainToNull(transform(v));
        });
      } else {
        styles[property] = constrainToNull(transform(value));
      }
    },
    value: function value() {
      return styles;
    }
  };
}
function getFontValue(obj, key) {
  if (!obj)
    return;
  return obj[key];
}
var StyledBlock = styled2("div", function(props) {
  var _props$$theme = props.$theme, breakpoints2 = _props$$theme.breakpoints, colors2 = _props$$theme.colors, typography2 = _props$$theme.typography, sizing2 = _props$$theme.sizing;
  var get = function get2(obj, key) {
    return obj[key];
  };
  var getScale = function getScale2(size) {
    return sizing2[size] || size;
  };
  var styles = build(breakpoints2);
  styles.apply({
    property: "color",
    value: get(props, "$color"),
    // @ts-ignore
    transform: function transform(color) {
      return colors2[color] || color;
    }
  });
  styles.apply({
    property: "backgroundAttachment",
    value: get(props, "$backgroundAttachment")
  });
  styles.apply({
    property: "backgroundClip",
    value: get(props, "$backgroundClip")
  });
  styles.apply({
    property: "backgroundColor",
    value: get(props, "$backgroundColor"),
    // @ts-ignore
    transform: function transform(backgroundColor) {
      return colors2[backgroundColor] || backgroundColor;
    }
  });
  styles.apply({
    property: "backgroundImage",
    value: get(props, "$backgroundImage")
  });
  styles.apply({
    property: "backgroundOrigin",
    value: get(props, "$backgroundOrigin")
  });
  styles.apply({
    property: "backgroundPosition",
    value: get(props, "$backgroundPosition")
  });
  styles.apply({
    property: "backgroundRepeat",
    value: get(props, "$backgroundRepeat")
  });
  styles.apply({
    property: "backgroundSize",
    value: get(props, "$backgroundSize")
  });
  styles.apply({
    property: "fontFamily",
    value: get(props, "$font"),
    // @ts-ignore
    transform: function transform(font) {
      return getFontValue(typography2[font], "fontFamily");
    }
  });
  styles.apply({
    property: "fontWeight",
    value: get(props, "$font"),
    // @ts-ignore
    transform: function transform(font) {
      return getFontValue(typography2[font], "fontWeight");
    }
  });
  styles.apply({
    property: "fontSize",
    value: get(props, "$font"),
    // @ts-ignore
    transform: function transform(font) {
      return getFontValue(typography2[font], "fontSize");
    }
  });
  styles.apply({
    property: "lineHeight",
    value: get(props, "$font"),
    // @ts-ignore
    transform: function transform(font) {
      return getFontValue(typography2[font], "lineHeight");
    }
  });
  styles.apply({
    property: "alignContent",
    value: get(props, "$alignContent")
  });
  styles.apply({
    property: "alignItems",
    value: get(props, "$alignItems")
  });
  styles.apply({
    property: "alignSelf",
    value: get(props, "$alignSelf")
  });
  styles.apply({
    property: "display",
    value: get(props, "$display")
  });
  styles.apply({
    property: "flex",
    value: get(props, "$flex")
  });
  styles.apply({
    property: "flexDirection",
    value: get(props, "$flexDirection")
  });
  styles.apply({
    property: "grid",
    value: get(props, "$grid")
  });
  styles.apply({
    property: "gridArea",
    value: get(props, "$gridArea")
  });
  styles.apply({
    property: "gridAutoColumns",
    value: get(props, "$gridAutoColumns")
  });
  styles.apply({
    property: "gridAutoFlow",
    value: get(props, "$gridAutoFlow")
  });
  styles.apply({
    property: "gridAutoRows",
    value: get(props, "$gridAutoRows")
  });
  styles.apply({
    property: "gridColumn",
    value: get(props, "$gridColumn")
  });
  styles.apply({
    property: "gridColumnEnd",
    value: get(props, "$gridColumnEnd")
  });
  styles.apply({
    property: "gridColumnGap",
    value: get(props, "$gridColumnGap"),
    transform: getScale
  });
  styles.apply({
    property: "gridColumnStart",
    value: get(props, "$gridColumnStart")
  });
  styles.apply({
    property: "gridGap",
    value: get(props, "$gridGap"),
    transform: getScale
  });
  styles.apply({
    property: "gridRow",
    value: get(props, "$gridRow")
  });
  styles.apply({
    property: "gridRowEnd",
    value: get(props, "$gridRowEnd")
  });
  styles.apply({
    property: "gridRowGap",
    value: get(props, "$gridRowGap"),
    transform: getScale
  });
  styles.apply({
    property: "gridRowStart",
    value: get(props, "$gridRowStart")
  });
  styles.apply({
    property: "gridTemplate",
    value: get(props, "$gridTemplate")
  });
  styles.apply({
    property: "gridTemplateAreas",
    value: get(props, "$gridTemplateAreas")
  });
  styles.apply({
    property: "gridTemplateColumns",
    value: get(props, "$gridTemplateColumns")
  });
  styles.apply({
    property: "gridTemplateRows",
    value: get(props, "$gridTemplateRows")
  });
  styles.apply({
    property: "justifyContent",
    value: get(props, "$justifyContent")
  });
  styles.apply({
    property: "justifyItems",
    value: get(props, "$justifyItems")
  });
  styles.apply({
    property: "justifySelf",
    value: get(props, "$justifySelf")
  });
  styles.apply({
    property: "position",
    value: get(props, "$position")
  });
  styles.apply({
    property: "width",
    value: get(props, "$width"),
    transform: getScale
  });
  styles.apply({
    property: "minWidth",
    value: get(props, "$minWidth"),
    transform: getScale
  });
  styles.apply({
    property: "maxWidth",
    value: get(props, "$maxWidth"),
    transform: getScale
  });
  styles.apply({
    property: "height",
    value: get(props, "$height"),
    transform: getScale
  });
  styles.apply({
    property: "minHeight",
    value: get(props, "$minHeight"),
    transform: getScale
  });
  styles.apply({
    property: "maxHeight",
    value: get(props, "$maxHeight"),
    transform: getScale
  });
  styles.apply({
    property: "overflowX",
    value: get(props, "$overflow"),
    // @ts-ignore
    transform: function transform(overflow) {
      if (overflow === "scrollX") {
        return "scroll";
      }
      return null;
    }
  });
  styles.apply({
    property: "overflowY",
    value: get(props, "$overflow"),
    // @ts-ignore
    transform: function transform(overflow) {
      if (overflow === "scrollY") {
        return "scroll";
      }
      return null;
    }
  });
  styles.apply({
    property: "overflow",
    value: get(props, "$overflow"),
    // @ts-ignore
    transform: function transform(overflow) {
      if (overflow !== "scrollX" && overflow !== "scrollY") {
        return overflow;
      }
      return null;
    }
  });
  styles.apply({
    property: "margin",
    value: get(props, "$margin"),
    transform: getScale
  });
  styles.apply({
    property: "marginTop",
    value: get(props, "$marginTop"),
    transform: getScale
  });
  styles.apply({
    property: "marginRight",
    value: get(props, "$marginRight"),
    transform: getScale
  });
  styles.apply({
    property: "marginBottom",
    value: get(props, "$marginBottom"),
    transform: getScale
  });
  styles.apply({
    property: "marginLeft",
    value: get(props, "$marginLeft"),
    transform: getScale
  });
  styles.apply({
    property: "padding",
    value: get(props, "$padding"),
    transform: getScale
  });
  styles.apply({
    property: "paddingTop",
    value: get(props, "$paddingTop"),
    transform: getScale
  });
  styles.apply({
    property: "paddingRight",
    value: get(props, "$paddingRight"),
    transform: getScale
  });
  styles.apply({
    property: "paddingBottom",
    value: get(props, "$paddingBottom"),
    transform: getScale
  });
  styles.apply({
    property: "paddingLeft",
    value: get(props, "$paddingLeft"),
    transform: getScale
  });
  styles.apply({
    property: "placeContent",
    value: get(props, "$placeContent")
  });
  styles.apply({
    property: "placeItems",
    value: get(props, "$placeItems")
  });
  styles.apply({
    property: "placeSelf",
    value: get(props, "$placeSelf")
  });
  styles.apply({
    property: "flexWrap",
    value: get(props, "$flexWrap"),
    transform: function transform() {
      return "wrap";
    }
  });
  styles.apply({
    property: "top",
    value: get(props, "$top"),
    transform: getScale
  });
  styles.apply({
    property: "right",
    value: get(props, "$right"),
    transform: getScale
  });
  styles.apply({
    property: "left",
    value: get(props, "$left"),
    transform: getScale
  });
  styles.apply({
    property: "bottom",
    value: get(props, "$bottom"),
    transform: getScale
  });
  styles.apply({
    property: "textOverflow",
    value: get(props, "$textOverflow")
  });
  styles.apply({
    property: "whiteSpace",
    value: get(props, "$whiteSpace")
  });
  return styles.value();
});
StyledBlock.displayName = "StyledBlock";
StyledBlock.displayName = "StyledBlock";

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/helpers/overrides.js
var React4 = __toESM(require_react());
var import_react_is = __toESM(require_react_is());
function _extends3() {
  _extends3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
function ownKeys8(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread8(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys8(Object(source), true).forEach(function(key) {
      _defineProperty8(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys8(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty8(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _typeof2(obj) {
  "@babel/helpers - typeof";
  return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof2(obj);
}
function getOverride(_override) {
  if ((0, import_react_is.isValidElementType)(_override)) {
    return _override;
  }
  if (_override && _typeof2(_override) === "object") {
    return _override.component;
  }
  return _override;
}
function getOverrideProps(_override) {
  if (_override && _typeof2(_override) === "object") {
    if (_typeof2(_override.props) === "object") {
      return _objectSpread8(_objectSpread8({}, _override.props), {}, {
        $style: _override.style
      });
    } else {
      return {
        $style: _override.style
      };
    }
  }
  return {};
}
function getOverrides(_override, defaultComponent) {
  var Component2 = getOverride(_override) || defaultComponent;
  if (_override && _typeof2(_override) === "object" && typeof _override.props === "function") {
    if (true) {
      console.warn("baseui:Overrides Props as a function will be removed in the next major version. Override the whole component instead. See https://baseweb.design/guides/understanding-overrides/#override-the-entire-subcomponent");
    }
    var DynamicOverride = React4.forwardRef(function(props2, ref) {
      var mappedProps = _override.props(props2);
      var nextProps = getOverrideProps(_objectSpread8(_objectSpread8({}, _override), {}, {
        props: mappedProps
      }));
      return React4.createElement(Component2, _extends3({
        ref
      }, nextProps));
    });
    DynamicOverride.displayName = Component2.displayName;
    return [DynamicOverride, {}];
  }
  var props = getOverrideProps(_override);
  return [Component2, props];
}

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/block/block.js
var _excluded = ["forwardedRef", "children", "as", "overrides", "color", "backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPosition", "backgroundRepeat", "backgroundSize", "font", "alignContent", "alignItems", "alignSelf", "flexDirection", "display", "flex", "grid", "gridArea", "gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridColumn", "gridColumnEnd", "gridColumnGap", "gridColumnStart", "gridGap", "gridRow", "gridRowEnd", "gridRowGap", "gridRowStart", "gridTemplate", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows", "justifyContent", "justifyItems", "justifySelf", "position", "width", "minWidth", "maxWidth", "height", "minHeight", "maxHeight", "overflow", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "placeContent", "placeItems", "placeSelf", "flexWrap", "left", "top", "right", "bottom", "textOverflow", "whiteSpace"];
function _extends4() {
  _extends4 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Block = function Block2(_ref) {
  var forwardedRef = _ref.forwardedRef, children = _ref.children, _ref$as = _ref.as, as = _ref$as === void 0 ? "div" : _ref$as, _ref$overrides = _ref.overrides, overrides = _ref$overrides === void 0 ? {} : _ref$overrides, color = _ref.color, backgroundAttachment = _ref.backgroundAttachment, backgroundClip = _ref.backgroundClip, backgroundColor = _ref.backgroundColor, backgroundImage = _ref.backgroundImage, backgroundOrigin = _ref.backgroundOrigin, backgroundPosition = _ref.backgroundPosition, backgroundRepeat = _ref.backgroundRepeat, backgroundSize = _ref.backgroundSize, font = _ref.font, alignContent = _ref.alignContent, alignItems = _ref.alignItems, alignSelf = _ref.alignSelf, flexDirection = _ref.flexDirection, display = _ref.display, flex = _ref.flex, grid2 = _ref.grid, gridArea = _ref.gridArea, gridAutoColumns = _ref.gridAutoColumns, gridAutoFlow = _ref.gridAutoFlow, gridAutoRows = _ref.gridAutoRows, gridColumn = _ref.gridColumn, gridColumnEnd = _ref.gridColumnEnd, gridColumnGap = _ref.gridColumnGap, gridColumnStart = _ref.gridColumnStart, gridGap = _ref.gridGap, gridRow = _ref.gridRow, gridRowEnd = _ref.gridRowEnd, gridRowGap = _ref.gridRowGap, gridRowStart = _ref.gridRowStart, gridTemplate = _ref.gridTemplate, gridTemplateAreas = _ref.gridTemplateAreas, gridTemplateColumns = _ref.gridTemplateColumns, gridTemplateRows = _ref.gridTemplateRows, justifyContent = _ref.justifyContent, justifyItems = _ref.justifyItems, justifySelf = _ref.justifySelf, position = _ref.position, width = _ref.width, minWidth = _ref.minWidth, maxWidth = _ref.maxWidth, height = _ref.height, minHeight = _ref.minHeight, maxHeight = _ref.maxHeight, overflow = _ref.overflow, margin = _ref.margin, marginTop = _ref.marginTop, marginRight = _ref.marginRight, marginBottom = _ref.marginBottom, marginLeft = _ref.marginLeft, padding = _ref.padding, paddingTop = _ref.paddingTop, paddingRight = _ref.paddingRight, paddingBottom = _ref.paddingBottom, paddingLeft = _ref.paddingLeft, placeContent = _ref.placeContent, placeItems = _ref.placeItems, placeSelf = _ref.placeSelf, flexWrap = _ref.flexWrap, left = _ref.left, top = _ref.top, right = _ref.right, bottom = _ref.bottom, textOverflow = _ref.textOverflow, whiteSpace = _ref.whiteSpace, restProps = _objectWithoutProperties(_ref, _excluded);
  var _getOverrides = getOverrides(overrides.Block, StyledBlock), _getOverrides2 = _slicedToArray2(_getOverrides, 2), BaseBlock = _getOverrides2[0], baseBlockProps = _getOverrides2[1];
  return React5.createElement(
    BaseBlock,
    _extends4({
      ref: forwardedRef,
      $as: as,
      $color: color,
      $backgroundAttachment: backgroundAttachment,
      $backgroundClip: backgroundClip,
      $backgroundColor: backgroundColor,
      $backgroundImage: backgroundImage,
      $backgroundOrigin: backgroundOrigin,
      $backgroundPosition: backgroundPosition,
      $backgroundRepeat: backgroundRepeat,
      $backgroundSize: backgroundSize,
      $font: font,
      $alignContent: alignContent,
      $alignItems: alignItems,
      $alignSelf: alignSelf,
      $flexDirection: flexDirection,
      $display: display,
      $flex: flex,
      $grid: grid2,
      $gridArea: gridArea,
      $gridAutoColumns: gridAutoColumns,
      $gridAutoFlow: gridAutoFlow,
      $gridAutoRows: gridAutoRows,
      $gridColumn: gridColumn,
      $gridColumnEnd: gridColumnEnd,
      $gridColumnGap: gridColumnGap,
      $gridColumnStart: gridColumnStart,
      $gridGap: gridGap,
      $gridRow: gridRow,
      $gridRowEnd: gridRowEnd,
      $gridRowGap: gridRowGap,
      $gridRowStart: gridRowStart,
      $gridTemplate: gridTemplate,
      $gridTemplateAreas: gridTemplateAreas,
      $gridTemplateColumns: gridTemplateColumns,
      $gridTemplateRows: gridTemplateRows,
      $justifyContent: justifyContent,
      $justifyItems: justifyItems,
      $justifySelf: justifySelf,
      $position: position,
      $width: width,
      $minWidth: minWidth,
      $maxWidth: maxWidth,
      $height: height,
      $minHeight: minHeight,
      $maxHeight: maxHeight,
      $overflow: overflow,
      $margin: margin,
      $marginTop: marginTop,
      $marginRight: marginRight,
      $marginBottom: marginBottom,
      $marginLeft: marginLeft,
      $padding: padding,
      $paddingTop: paddingTop,
      $paddingRight: paddingRight,
      $paddingBottom: paddingBottom,
      $paddingLeft: paddingLeft,
      $placeContent: placeContent,
      $placeItems: placeItems,
      $placeSelf: placeSelf,
      $flexWrap: flexWrap,
      $left: left,
      $top: top,
      $right: right,
      $bottom: bottom,
      $textOverflow: textOverflow,
      $whiteSpace: whiteSpace,
      "data-baseweb": "block"
    }, restProps, baseBlockProps),
    children
  );
};
var BlockComponent = React5.forwardRef(function(props, ref) {
  return React5.createElement(Block, _extends4({}, props, {
    forwardedRef: ref
  }));
});
BlockComponent.displayName = "Block";
var block_default = BlockComponent;

// .yarn/unplugged/baseui-virtual-045c918b16/node_modules/baseui/esm/typography/index.js
function _extends5() {
  _extends5 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends5.apply(this, arguments);
}
var DisplayLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-displaylarge"
  }, props, {
    font: props.font || "DisplayLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
DisplayLarge.displayName = "DisplayLarge";
var DisplayMedium = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-displaymedium"
  }, props, {
    font: props.font || "DisplayMedium",
    color: props.color || "contentPrimary",
    ref
  }));
});
DisplayMedium.displayName = "DisplayMedium";
var DisplaySmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-displaysmall"
  }, props, {
    font: props.font || "DisplaySmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
DisplaySmall.displayName = "DisplaySmall";
var DisplayXSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-displayxsmall"
  }, props, {
    font: props.font || "DisplayXSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
DisplayXSmall.displayName = "DisplayXSmall";
var HeadingXXLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-headingxxlarge",
    as: props.as || "h1"
  }, props, {
    font: props.font || "HeadingXXLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
HeadingXXLarge.displayName = "HeadingXXLarge";
var HeadingXLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-headingxlarge",
    as: props.as || "h2"
  }, props, {
    font: props.font || "HeadingXLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
HeadingXLarge.displayName = "HeadingXLarge";
var HeadingLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-headinglarge",
    as: props.as || "h3"
  }, props, {
    font: props.font || "HeadingLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
HeadingLarge.displayName = "HeadingLarge";
var HeadingMedium = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-headingmedium",
    as: props.as || "h4"
  }, props, {
    font: props.font || "HeadingMedium",
    color: props.color || "contentPrimary",
    ref
  }));
});
HeadingMedium.displayName = "HeadingMedium";
var HeadingSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-headingsmall",
    as: props.as || "h5"
  }, props, {
    font: props.font || "HeadingSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
HeadingSmall.displayName = "HeadingSmall";
var HeadingXSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-headingxsmall",
    as: props.as || "h6"
  }, props, {
    font: props.font || "HeadingXSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
HeadingXSmall.displayName = "HeadingXSmall";
var LabelLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-labellarge"
  }, props, {
    font: props.font || "LabelLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
LabelLarge.displayName = "LabelLarge";
var LabelMedium = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-labelmedium"
  }, props, {
    font: props.font || "LabelMedium",
    color: props.color || "contentPrimary",
    ref
  }));
});
LabelMedium.displayName = "LabelMedium";
var LabelSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-labelsmall"
  }, props, {
    font: props.font || "LabelSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
LabelSmall.displayName = "LabelSmall";
var LabelXSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-labelxsmall"
  }, props, {
    font: props.font || "LabelXSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
LabelXSmall.displayName = "LabelXSmall";
var ParagraphLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-paragraphlarge",
    as: props.as || "p"
  }, props, {
    font: props.font || "ParagraphLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
ParagraphLarge.displayName = "ParagraphLarge";
var ParagraphMedium = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-paragraphmedium",
    as: props.as || "p"
  }, props, {
    font: props.font || "ParagraphMedium",
    color: props.color || "contentPrimary",
    ref
  }));
});
ParagraphMedium.displayName = "ParagraphMedium";
var ParagraphSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-paragraphsmall",
    as: props.as || "p"
  }, props, {
    font: props.font || "ParagraphSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
ParagraphSmall.displayName = "ParagraphSmall";
var ParagraphXSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-paragraphxsmall",
    as: props.as || "p"
  }, props, {
    font: props.font || "ParagraphXSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
ParagraphXSmall.displayName = "ParagraphXSmall";
var MonoDisplayLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monodisplaylarge"
  }, props, {
    font: props.font || "MonoDisplayLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoDisplayLarge.displayName = "MonoDisplayLarge";
var MonoDisplayMedium = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monodisplaymedium"
  }, props, {
    font: props.font || "MonoDisplayMedium",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoDisplayMedium.displayName = "MonoDisplayMedium";
var MonoDisplaySmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monodisplaysmall"
  }, props, {
    font: props.font || "MonoDisplaySmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoDisplaySmall.displayName = "MonoDisplaySmall";
var MonoDisplayXSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monodisplayxsmall"
  }, props, {
    font: props.font || "MonoDisplayXSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoDisplayXSmall.displayName = "MonoDisplayXSmall";
var MonoHeadingXXLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monoheadingxxlarge",
    as: props.as || "h1"
  }, props, {
    font: props.font || "MonoHeadingXXLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoHeadingXXLarge.displayName = "MonoHeadingXXLarge";
var MonoHeadingXLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monoheadingxlarge",
    as: props.as || "h2"
  }, props, {
    font: props.font || "MonoHeadingXLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoHeadingXLarge.displayName = "MonoHeadingXLarge";
var MonoHeadingLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monoheadinglarge",
    as: props.as || "h3"
  }, props, {
    font: props.font || "MonoHeadingLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoHeadingLarge.displayName = "MonoHeadingLarge";
var MonoHeadingMedium = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monoheadingmedium",
    as: props.as || "h4"
  }, props, {
    font: props.font || "MonoHeadingMedium",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoHeadingMedium.displayName = "MonoHeadingMedium";
var MonoHeadingSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monoheadingsmall",
    as: props.as || "h5"
  }, props, {
    font: props.font || "MonoHeadingSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoHeadingSmall.displayName = "MonoHeadingSmall";
var MonoHeadingXSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monoheadingxsmall",
    as: props.as || "h6"
  }, props, {
    font: props.font || "MonoHeadingXSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoHeadingXSmall.displayName = "MonoHeadingXSmall";
var MonoLabelLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monolabellarge"
  }, props, {
    font: props.font || "MonoLabelLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoLabelLarge.displayName = "MonoLabelLarge";
var MonoLabelMedium = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monolabelmedium"
  }, props, {
    font: props.font || "MonoLabelMedium",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoLabelMedium.displayName = "MonoLabelMedium";
var MonoLabelSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monolabelsmall"
  }, props, {
    font: props.font || "MonoLabelSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoLabelSmall.displayName = "MonoLabelSmall";
var MonoLabelXSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monolabelxsmall"
  }, props, {
    font: props.font || "MonoLabelXSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoLabelXSmall.displayName = "MonoLabelXSmall";
var MonoParagraphLarge = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monoparagraphlarge",
    as: props.as || "p"
  }, props, {
    font: props.font || "MonoParagraphLarge",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoParagraphLarge.displayName = "MonoParagraphLarge";
var MonoParagraphMedium = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monoparagraphmedium",
    as: props.as || "p"
  }, props, {
    font: props.font || "MonoParagraphMedium",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoParagraphMedium.displayName = "MonoParagraphMedium";
var MonoParagraphSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monoparagraphsmall",
    as: props.as || "p"
  }, props, {
    font: props.font || "MonoParagraphSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoParagraphSmall.displayName = "MonoParagraphSmall";
var MonoParagraphXSmall = React6.forwardRef(function(props, ref) {
  return React6.createElement(block_default, _extends5({
    "data-baseweb": "typo-monoparagraphxsmall",
    as: props.as || "p"
  }, props, {
    font: props.font || "MonoParagraphXSmall",
    color: props.color || "contentPrimary",
    ref
  }));
});
MonoParagraphXSmall.displayName = "MonoParagraphXSmall";
export {
  DisplayLarge,
  DisplayMedium,
  DisplaySmall,
  DisplayXSmall,
  HeadingLarge,
  HeadingMedium,
  HeadingSmall,
  HeadingXLarge,
  HeadingXSmall,
  HeadingXXLarge,
  LabelLarge,
  LabelMedium,
  LabelSmall,
  LabelXSmall,
  MonoDisplayLarge,
  MonoDisplayMedium,
  MonoDisplaySmall,
  MonoDisplayXSmall,
  MonoHeadingLarge,
  MonoHeadingMedium,
  MonoHeadingSmall,
  MonoHeadingXLarge,
  MonoHeadingXSmall,
  MonoHeadingXXLarge,
  MonoLabelLarge,
  MonoLabelMedium,
  MonoLabelSmall,
  MonoLabelXSmall,
  MonoParagraphLarge,
  MonoParagraphMedium,
  MonoParagraphSmall,
  MonoParagraphXSmall,
  ParagraphLarge,
  ParagraphMedium,
  ParagraphSmall,
  ParagraphXSmall
};
/*! Bundled license information:

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=baseui_typography.js.map
